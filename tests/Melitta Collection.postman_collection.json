{
	"info": {
		"_postman_id": "07867cc2-ad8a-4323-85c3-e8e413ac1bf9",
		"name": "Melitta Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Producer",
			"item": [
				{
					"name": "1. Authorization",
					"item": [
						{
							"name": "1. Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json(); // ответный джсон сохраним в переменную ",
											"",
											"//JSON.parse(responseBody); ",
											"",
											"console.log('responseBody = ', responseBody);",
											"console.log(jsonData.result.authToken); // из ответного джсона возьмет поле authToken",
											"",
											"if(pm.response.code === 200){",
											"    pm.collectionVariables.set(\"access_token\", jsonData.result.authToken); //  из ответного джсона возьмет поле authToken  и сохранит в переменную access_token",
											"    //pm.environment.set(\"access_token\", jsonData.result.authToken); // будет переменная окружения",
											"}",
											"",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"login\": \"admin@admin.ru\",\n  \"password\": \"adminadmin\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/common/auth/login",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"common",
										"auth",
										"login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "2. Create data",
					"item": [
						{
							"name": "Create country",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json(); // ответный джсон сохраним в переменную ",
											"",
											"",
											"",
											"//console.log('responseBody = ', responseBody);",
											"//console.log(jsonData.result.id); // из ответного джсона возьмет поле id",
											"",
											"if(pm.response.code === 201){",
											"    pm.collectionVariables.set(\"сontryId\", jsonData.result.id) ",
											"    ",
											"    //  из ответного джсона возьмет поле id  и сохранит в переменную сontryId",
											"}",
											"",
											"",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"countryCode\": \"{{$randomCountryCode}}\",\n  \"languageCode\": \"{{$randomLocale}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/countries",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"countries"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create city",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json(); // ответный джсон сохраним в переменную ",
											"",
											"//JSON.parse(responseBody); ",
											"",
											"console.log('responseBody = ', responseBody);",
											"//console.log(jsonData.result.id); // из ответного джсона возьмет поле id",
											"",
											"if(pm.response.code === 201){",
											"    pm.collectionVariables.set(\"cityId\", jsonData.result.id)",
											"    pm.collectionVariables.set(\"cityName\", jsonData.result.name) //  из ответного джсона возьмет поле id  и сохранит в переменную cityName",
											"}",
											"",
											"",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"country\": {{сontryId}},\n  \"name\": \"{{$randomCity}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/cities",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"cities"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create distributor",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var warrantyMonths = _.random(1, 10);\r",
											"pm.collectionVariables.set('warrantyMonths', warrantyMonths);\r",
											"\r",
											"var phone = \"+7\";\r",
											"for(let i=0; i<10; i++){\r",
											"    phone += _.random(0, 9);  // генерим номер телефона\r",
											"}\r",
											"\r",
											"pm.collectionVariables.set('phone', phone); // сохраняем номер тел в перменную phone\r",
											"\r",
											"var picture = _.random(1, 24);\r",
											"pm.collectionVariables.set('picture', picture); //генерим картинку для юзера\r",
											"\r",
											"var modelDevice = _.random(1, 4);\r",
											"pm.collectionVariables.set('modelDevice', modelDevice); //генерим модель устройства\r",
											"\r",
											"var technicalOperatingTime = _.random(10000000, 99999999);\r",
											"pm.collectionVariables.set('technicalOperatingTime', technicalOperatingTime); //генерим время работы устройства\r",
											"\r",
											"var lampOperatingTime = _.random(10000000, 99999999);\r",
											"pm.collectionVariables.set('lampOperatingTime', lampOperatingTime); //генерим время работы лампы\r",
											"\r",
											"var lampPhotoSensor = _.random(1, 100);\r",
											"pm.collectionVariables.set('lampPhotoSensor', lampPhotoSensor); //генерим номер фотодатчика лампы\r",
											"\r",
											"var deviceUpdateVersion = _.random(1, 5);\r",
											"pm.collectionVariables.set('deviceUpdateVersion', deviceUpdateVersion); //генерим номер обновления устройства\r",
											"\r",
											"var pduUpdateVersion = _.random(6, 10);\r",
											"pm.collectionVariables.set('pduUpdateVersion', pduUpdateVersion); //генерим номер обновления ПДУ\r",
											"\r",
											"let stateArray = [\"WORK\", \"WARN\", \"ERROR\"];\r",
											"var state = stateArray[_.random(0, stateArray.length - 1)];\r",
											"pm.collectionVariables.set('state', state); //генерим состояние устройства"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json(); // ответный джсон сохраним в переменную \r",
											"\r",
											"//JSON.parse(responseBody); \r",
											"\r",
											"console.log('responseBody = ', responseBody);\r",
											"//console.log(jsonData.result.id); // из ответного джсона возьмет поле id\r",
											"\r",
											"if(pm.response.code === 201){\r",
											"    pm.collectionVariables.set(\"distributorId\", jsonData.result.id)\r",
											"    pm.collectionVariables.set(\"distributorName\", jsonData.result.name) //  из ответного джсона возьмет поле id и сохранит в переменную distributorId\r",
											"}\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{$randomUserName}}\",\r\n  \"city\": {{cityId}},\r\n  \"address\": \"{{$randomStreetAddress}}\",\r\n  \"phone\": \"{{phone}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"notes\": \"Test distributor\",\r\n  \"warrantyMonths\": {{warrantyMonths}},\r\n  \"users\": [\r\n    {\r\n      \"username\": \"{{$randomUserName}}\",\r\n      \"name\": \"{{$randomFullName}}\",\r\n      \"position\": \"{{$randomJobTitle}}\",\r\n      \"phone\": \"{{phone}}\",\r\n      \"email\": \"{{$randomEmail}}\",\r\n      \"password\": \"{{$randomPassword}}\",\r\n      \"picture\": {{picture}}\r\n    }\r\n  ],\r\n  \"devices\": [\r\n    {\r\n      \"name\": \"Device {{randNameDevice}}\",\r\n      \"model\": {{modelDevice}},\r\n      \"serialNumber\": \"{{$randomAlphaNumeric}}\",\r\n      \"technicalOperatingTime\": {{technicalOperatingTime}},\r\n      \"lampNumber\": \"{{$randomAlphaNumeric}}\",\r\n      \"lampOperatingTime\": {{lampOperatingTime}},\r\n      \"lampPhotoSensor\": {{lampPhotoSensor}},\r\n      \"accessCode\": \"{{$randomAlphaNumeric}}\",\r\n      \"deviceUpdateVersion\": {{deviceUpdateVersion}},\r\n      \"pduUpdateVersion\": {{pduUpdateVersion}},\r\n      \"city\": {{cityId}},\r\n      \"state\": \"{{state}}\"\r\n    }\r\n  ]\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/distributors",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"distributors"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create client",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json(); // ответный джсон сохраним в переменную \r",
											"\r",
											"console.log('responseBody = ', responseBody);\r",
											"\r",
											"if(pm.response.code === 201){\r",
											"    pm.collectionVariables.set(\"clientId\", jsonData.result.id)\r",
											"    pm.collectionVariables.set('clientName', jsonData.result.name)\r",
											"}\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\":\"{{$randomFullName}}\",\r\n  \"city\": {{cityId}},\r\n  \"address\": \"{{$randomStreetAddress}}\",\r\n  \"phone\": \"{{phone}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"notes\": \"Test client\",\r\n  \"distributor\": {{distributorId}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/clients",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create device",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var alphabetAndNumbers = [\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]\r",
											"\r",
											"\r",
											"//Генерим имя установки\r",
											"var nameTestDeviceArray = ['Device1', 'Device2', 'Device3', 'Device4',  'Device5', 'Device6', 'Device7', 'Device8', 'Device9', 'Device10', 'Device11', 'Device12', 'Device13', 'Device14', 'Device15', 'Device16', 'Device17', 'Device18']\r",
											"\r",
											"var nameTestDevice = nameTestDeviceArray[_.random(0, nameTestDeviceArray.length)]\r",
											"pm.collectionVariables.set('nameTestDevice', nameTestDevice)\r",
											"console.log(\"nameTestDevice = \", nameTestDevice) \r",
											"\r",
											"//Генерим модель\r",
											"var modelDevice = _.random(1, 4)\r",
											"pm.collectionVariables.set('modelDevice', modelDevice)\r",
											"console.log('modelDevice', modelDevice)\r",
											"\r",
											"//Генерим серийный номер\r",
											"var serialNumber = \"\"\r",
											"for (let i=0; i<9; i++) {\r",
											"    serialNumber += alphabetAndNumbers[_.random(0, alphabetAndNumbers.length)]\r",
											"}\r",
											"pm.collectionVariables.set('serialNumber', serialNumber)\r",
											"\r",
											"//Генерим дату приемки и отправки установки. R специально добавлена в конце названия\r",
											"var receiveDateTimeR = new Date().getTime() - 86400000\r",
											"var dispatchDateTimeR = new Date().getTime() + 86400000\r",
											"console.log('receiveDateTimeR', receiveDateTimeR)\r",
											"pm.collectionVariables.set('receiveDateTimeR', receiveDateTimeR)\r",
											"pm.collectionVariables.set('dispatchDateTimeR', dispatchDateTimeR)\r",
											"\r",
											"\r",
											"//Генерим техническое время работы\r",
											"var technicalOperatingTime = _.random(10000, 30000)\r",
											"pm.collectionVariables.set('technicalOperatingTime', technicalOperatingTime)\r",
											"console.log('technicalOperatingTime', technicalOperatingTime) \r",
											"\r",
											"\r",
											"//Генерим номер лампы\r",
											"var lampNumber = \"\"\r",
											"for (let i=0; i<9; i++) {\r",
											"    lampNumber += alphabetAndNumbers[_.random(0, alphabetAndNumbers.length)]\r",
											"}\r",
											"pm.collectionVariables.set('lampNumber', lampNumber)\r",
											"\r",
											"\r",
											" //Генерим время работы лампы\r",
											"var lampOperatingTime = _.random(10000000, 99999999);\r",
											"pm.collectionVariables.set('lampOperatingTime', lampOperatingTime)\r",
											"console.log('lampOperatingTime', lampOperatingTime)\r",
											"\r",
											" //Генерим сенсор лампы\r",
											"var lampPhotoSensor = _.random(1, 99);\r",
											"pm.collectionVariables.set('lampPhotoSensor', lampPhotoSensor);\r",
											"console.log('lampPhotoSensor', lampPhotoSensor)\r",
											"\r",
											"\r",
											"//Генерим код доступа\r",
											"var accessCode = \"\"\r",
											"for (let i=0; i<9; i++) {\r",
											"    accessCode += alphabetAndNumbers[_.random(0, alphabetAndNumbers.length)]\r",
											"}\r",
											"pm.collectionVariables.set('accessCode', accessCode)\r",
											"\r",
											"//Генерим версию установки\r",
											"var deviceUpdateVersionForTestDevice = _.random(1, 5)\r",
											"pm.collectionVariables.set('deviceUpdateVersionForTestDevice', deviceUpdateVersionForTestDevice)\r",
											"console.log('deviceUpdateVersionForTestDevice', deviceUpdateVersionForTestDevice)\r",
											"\r",
											"//Генерим ПДУ установки\r",
											"var pduUpdateVersionForTestDevice = _.random(6, 10)\r",
											"pm.collectionVariables.set(\"pduUpdateVersionForTestDevice\", pduUpdateVersionForTestDevice)\r",
											"console.log(\"pduUpdateVersionForTestDevice\", pduUpdateVersionForTestDevice)\r",
											"\r",
											"//Генерим состояние установки\r",
											"var stateArray = [\"WORK\", \"WARN\", \"ERROR\"]\r",
											"var state = stateArray[_.random(0, 2)]\r",
											"pm.collectionVariables.set('state', state)\r",
											"console.log('state', state)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"if(pm.response.code === 201){\r",
											"    pm.collectionVariables.set(\"deviceId\", jsonData.result.id); //  из ответного джсона возьмет поле id  и сохранит в переменную testDistributorsId\r",
											"}\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{nameTestDevice}}\",\r\n  \"model\": {{modelDevice}},\r\n  \"serialNumber\": \"{{serialNumber}}\",\r\n  \"receiveDateTime\": {{dispatchDateTimeR}},\r\n  \"dispatchDateTime\": {{dispatchDateTimeR}},\r\n  \"technicalOperatingTime\": {{technicalOperatingTime}},\r\n  \"lampNumber\": \"{{lampNumber}}\",\r\n  \"lampOperatingTime\": {{lampOperatingTime}},\r\n  \"lampPhotoSensor\": {{lampPhotoSensor}},\r\n  \"accessCode\": \"{{accessCode}}\",\r\n  \"deviceUpdateVersion\": {{deviceUpdateVersionForTestDevice}},\r\n  \"pduUpdateVersion\": {{pduUpdateVersionForTestDevice}},\r\n  \"city\": {{cityId}},\r\n  \"state\": \"{{state}}\",\r\n  \"notes\": \"test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"devices"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "3. Admin.Countries",
					"item": [
						{
							"name": "Create test country",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json(); // ответный джсон сохраним в переменную ",
											"",
											"",
											"if(pm.response.code === 201){",
											"    pm.collectionVariables.set(\"testCountryId\", jsonData.result.id); //  из ответного джсона возьмет поле id  и сохранит в переменную testCountryId",
											"}",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"countryCode\": \"{{$randomCountryCode}}\",\n  \"languageCode\": \"{{$randomLocale}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/countries",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"countries"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get country",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/countries/{{testCountryId}}",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"countries",
										"{{testCountryId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update country",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"countryCode\": \"{{$randomCountryCode}}\",\r\n  \"languageCode\": \"{{$randomLocale}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin​/countries​/{{testCountryId}}",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin​",
										"countries​",
										"{{testCountryId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search countries",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin​/countries​/search",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin​",
										"countries​",
										"search"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete country",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/countries/{{testCountryId}}",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"countries",
										"{{testCountryId}}"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "noauth"
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "4. Admin.Cities",
					"item": [
						{
							"name": "Create  test city",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json(); // ответный джсон сохраним в переменную ",
											"",
											"//JSON.parse(responseBody); ",
											"",
											"console.log('responseBody = ', responseBody);",
											"//console.log(jsonData.result.id); // из ответного джсона возьмет поле id",
											"",
											"if(pm.response.code === 201){",
											"    pm.collectionVariables.set(\"testCityId\", jsonData.result.id); //  из ответного джсона возьмет поле id  и сохранит в переменную testCityId",
											"}",
											"",
											"",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"country\": {{testCountryId}},\n  \"name\": \"Test city\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/cities",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"cities"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get city",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/cities/{{testCityId}}",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"cities",
										"{{testCityId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update city",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"country\": {{testCountryId}},\r\n  \"name\": \"{{$randomCity}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/cities/{{testCityId}}",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"cities",
										"{{testCityId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search cities",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"country\": {{сontryId}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/cities/search",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"cities",
										"search"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete city",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/cities/{{testCityId}}",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"cities",
										"{{testCityId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "5. Admin.Distributors",
					"item": [
						{
							"name": "Create test distributor",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var warrantyMonths = _.random(1, 10);\r",
											"pm.collectionVariables.set('warrantyMonths', warrantyMonths);\r",
											"\r",
											"var phone = \"+7\";\r",
											"for(let i=0; i<10; i++){\r",
											"    phone += _.random(0, 9);  // генерим номер телефона\r",
											"}\r",
											"\r",
											"pm.collectionVariables.set('phone', phone); // сохраняем номер тел в перменную phone\r",
											"\r",
											"var picture = _.random(1, 24);\r",
											"pm.collectionVariables.set('picture', picture); //генерим картинку для юзера\r",
											"\r",
											"var modelDevice = _.random(1, 4);\r",
											"pm.collectionVariables.set('modelDevice', modelDevice); //генерим модель устройства\r",
											"\r",
											"var technicalOperatingTime = _.random(10000000, 99999999);\r",
											"pm.collectionVariables.set('technicalOperatingTime', technicalOperatingTime); //генерим время работы устройства\r",
											"\r",
											"var lampOperatingTime = _.random(10000000, 99999999);\r",
											"pm.collectionVariables.set('lampOperatingTime', lampOperatingTime); //генерим время работы лампы\r",
											"\r",
											"var lampPhotoSensor = _.random(1, 100);\r",
											"pm.collectionVariables.set('lampPhotoSensor', lampPhotoSensor); //генерим номер фотодатчика лампы\r",
											"\r",
											"var deviceUpdateVersionForDistributor = _.random(1, 5);\r",
											"pm.collectionVariables.set('deviceUpdateVersionForDistributor', deviceUpdateVersionForDistributor); //генерим номер обновления устройства\r",
											"\r",
											"var pduUpdateVersionForDistributor = _.random(6, 10);\r",
											"pm.collectionVariables.set('pduUpdateVersionForDistributor', pduUpdateVersionForDistributor); //генерим номер обновления ПДУ\r",
											"\r",
											"let stateArray = [\"WORK\", \"WARN\", \"ERROR\"];\r",
											"var state = stateArray[_.random(0, stateArray.length - 1)];\r",
											"pm.collectionVariables.set('state', state); //генерим состояние устройства"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json(); // ответный джсон сохраним в переменную \r",
											"\r",
											"//JSON.parse(responseBody); \r",
											"\r",
											"console.log('responseBody = ', responseBody);\r",
											"//console.log(jsonData.result.id); // из ответного джсона возьмет поле id\r",
											"\r",
											"if(pm.response.code === 201){\r",
											"    pm.collectionVariables.set(\"testDistributorsId\", jsonData.result.id); //  из ответного джсона возьмет поле id  и сохранит в переменную testDistributorsId\r",
											"}\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{$randomUserName}}\",\r\n  \"city\": {{cityId}},\r\n  \"address\": \"{{$randomStreetAddress}}\",\r\n  \"phone\": \"{{phone}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"notes\": \"Test distributor\",\r\n  \"warrantyMonths\": {{warrantyMonths}},\r\n  \"users\": [\r\n    {\r\n      \"username\": \"{{$randomUserName}}\",\r\n      \"name\": \"{{$randomFullName}}\",\r\n      \"position\": \"{{$randomJobTitle}}\",\r\n      \"phone\": \"{{phone}}\",\r\n      \"email\": \"{{$randomEmail}}\",\r\n      \"password\": \"{{$randomPassword}}\",\r\n      \"picture\": {{picture}}\r\n    }\r\n  ],\r\n  \"devices\": [\r\n    {\r\n      \"name\": \"{{randNameDevice}}\",\r\n      \"model\": {{modelDevice}},\r\n      \"serialNumber\": \"{{$randomAlphaNumeric}}\",\r\n      \"technicalOperatingTime\": {{technicalOperatingTime}},\r\n      \"lampNumber\": \"{{$randomAlphaNumeric}}\",\r\n      \"lampOperatingTime\": {{lampOperatingTime}},\r\n      \"lampPhotoSensor\": {{lampPhotoSensor}},\r\n      \"accessCode\": \"{{$randomAlphaNumeric}}\",\r\n      \"deviceUpdateVersion\": {{deviceUpdateVersionForDistributor}},\r\n      \"pduUpdateVersion\": {{pduUpdateVersionForDistributor}},\r\n      \"city\": {{cityId}},\r\n      \"state\": \"{{state}}\"\r\n    }\r\n  ]\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/distributors",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"distributors"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get distributor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/distributors/{{testDistributorsId}}",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"distributors",
										"{{testDistributorsId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update distributor",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json(); // ответный джсон\r",
											"\r",
											"\r",
											"console.log('jsonData.result.name', jsonData.result.name); // из ответного джсона возьмет поле name\r",
											"\r",
											" //  из ответного джсона возьмет поля name и cityName и сохранит в переменные testDistributorName и cityNameToSearch\r",
											"if(pm.response.code === 200){\r",
											"    pm.collectionVariables.set('testDistributorName', jsonData.result.name)\r",
											"    pm.collectionVariables.set('cityNameToSearchDistributors', jsonData.result.cityName)\r",
											"}\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{$randomUserName}}\",\r\n  \"city\": {{cityId}},\r\n  \"address\": \"{{$randomStreetAddress}}\",\r\n  \"phone\": \"{{phone}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"notes\": \"Test distributor\",\r\n  \"warrantyMonths\": {{warrantyMonths}},\r\n  \"users\": [\r\n    {\r\n      \"username\": \"{{userName}}\",\r\n      \"name\": \"{{$randomFullName}}\",\r\n      \"position\": \"{{$randomJobTitle}}\",\r\n      \"phone\": \"{{phone}}\",\r\n      \"email\": \"{{$randomEmail}}\",\r\n      \"password\": \"{{$randomPassword}}\",\r\n      \"picture\": {{picture}}\r\n    }\r\n  ],\r\n  \"devices\": [\r\n    {\r\n      \"name\": \"{{randNameDevice}}\",\r\n      \"model\": {{modelDevice}},\r\n      \"serialNumber\": \"{{$randomAlphaNumeric}}\",\r\n      \"technicalOperatingTime\": {{technicalOperatingTime}},\r\n      \"lampNumber\": \"{{$randomAlphaNumeric}}\",\r\n      \"lampOperatingTime\": {{lampOperatingTime}},\r\n      \"lampPhotoSensor\": {{lampPhotoSensor}},\r\n      \"accessCode\": \"{{$randomAlphaNumeric}}\",\r\n      \"deviceUpdateVersion\": {{deviceUpdateVersion}},\r\n      \"pduUpdateVersion\": {{pduUpdateVersion}},\r\n      \"city\": {{cityId}},\r\n      \"state\": \"{{state}}\"\r\n    }\r\n  ]\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/distributors/{{testDistributorsId}}",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"distributors",
										"{{testDistributorsId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Find a distributor by name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//Генерим столбец, по которому будет проводится сортировка, и тип сортировки\r",
											"\r",
											"var typeSortingArray = [\"ID\", \"NAME\", \"CLIENTS_NUM\", \"DEVICES_NUM\", \"SUPPORT_NEW_CHATS_NUM\"]\r",
											"var typeSorting = typeSortingArray[_.random(0, typeSortingArray.length - 1)]\r",
											"console.log('typeSorting = ', typeSorting)\r",
											"pm.collectionVariables.set('typeSorting', typeSorting)\r",
											"\r",
											"var orderArray = [\"ASC\", \"DESC\"]\r",
											"var order = orderArray[_.random(0,orderArray.length - 1)]\r",
											"console.log('order = ', order)\r",
											"pm.collectionVariables.set('order', order)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"searchText\": \"{{testDistributorName}}\",\r\n  \"country\": {{сontryId}},\r\n  \"city\": {{cityId}},\r\n  \"sorting\": [\r\n    {\r\n      \"type\": \"{{typeSorting}}\",\r\n      \"order\": \"{{order}}\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/distributors/search",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"distributors",
										"search"
									]
								}
							},
							"response": []
						},
						{
							"name": "Find a distributor by city",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//Генерим столбец, по которому будет проводится сортировка, и тип сортировки\r",
											"\r",
											"var typeSortingArray = [\"ID\", \"NAME\", \"CLIENTS_NUM\", \"DEVICES_NUM\", \"SUPPORT_NEW_CHATS_NUM\"]\r",
											"var typeSorting = typeSortingArray[_.random(0, typeSortingArray.length - 1)]\r",
											"console.log('typeSorting = ', typeSorting)\r",
											"pm.collectionVariables.set('typeSorting', typeSorting)\r",
											"\r",
											"var orderArray = [\"ASC\", \"DESC\"]\r",
											"var order = orderArray[_.random(0, orderArray.length - 1)]\r",
											"console.log('order = ', order)\r",
											"pm.collectionVariables.set('order', order)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"searchText\": \"{{cityNameToSearchDistributors}}\",\r\n  \"country\": {{сontryId}},\r\n  \"city\": {{cityId}},\r\n  \"sorting\": [\r\n    {\r\n      \"type\": \"{{typeSorting}}\",\r\n      \"order\": \"{{order}}\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/distributors/search",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"distributors",
										"search"
									]
								}
							},
							"response": []
						},
						{
							"name": "Find a distributor by description",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//Генерим столбец, по которому будет проводится сортировка, и тип сортировки\r",
											"\r",
											"var typeSortingArray = [\"ID\", \"NAME\", \"CLIENTS_NUM\", \"DEVICES_NUM\", \"SUPPORT_NEW_CHATS_NUM\"]\r",
											"var typeSorting = typeSortingArray[_.random(0, typeSortingArray.length - 1)]\r",
											"console.log('typeSorting = ', typeSorting)\r",
											"pm.collectionVariables.set('typeSorting', typeSorting)\r",
											"\r",
											"var orderArray = [\"ASC\", \"DESC\"]\r",
											"var order = orderArray[_.random(0, orderArray.length - 1)]\r",
											"console.log('order = ', order)\r",
											"pm.collectionVariables.set('order', order)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"searchText\": \"test\",\r\n  \"country\": {{сontryId}},\r\n  \"city\": {{cityId}},\r\n  \"sorting\": [\r\n    {\r\n      \"type\": \"{{typeSorting}}\",\r\n      \"order\": \"{{order}}\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/distributors/search",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"distributors",
										"search"
									]
								}
							},
							"response": []
						},
						{
							"name": "Distributor filter by country",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"country\": {{сontryId}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/distributors/search",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"distributors",
										"search"
									]
								}
							},
							"response": []
						},
						{
							"name": "Distributor filter by country and city",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"country\": {{сontryId}},\r\n  \"city\": {{cityId}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/distributors/search",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"distributors",
										"search"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search distributor histories",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/distributors/histories/{{testDistributorsId}}",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"distributors",
										"histories",
										"{{testDistributorsId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete test distributor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/distributors/{{testDistributorsId}}",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"distributors",
										"{{testDistributorsId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "6. Admin.Clients",
					"item": [
						{
							"name": "Create test client",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json(); // ответный джсон сохраним в переменную \r",
											"\r",
											"console.log('responseBody = ', responseBody);\r",
											"\r",
											"if(pm.response.code === 201){\r",
											"    pm.collectionVariables.set(\"testClientId\", jsonData.result.id)\r",
											"    pm.collectionVariables.set('testClientName', jsonData.result.name)\r",
											"}\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\":\"{{$randomFullName}}\",\r\n  \"city\": {{cityId}},\r\n  \"address\": \"{{$randomStreetAddress}}\",\r\n  \"phone\": \"{{phone}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"notes\": \"Test client\",\r\n  \"distributor\": {{distributorId}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/clients",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get client",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/clients/{{testClientId}}",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"clients",
										"{{testClientId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update client",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{$randomFullName}}\",\r\n  \"city\": {{cityId}},\r\n  \"address\": \"{{$randomStreetAddress}}\",\r\n  \"phone\": \"{{phone}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"notes\": \"Client test\",\r\n  \"distributor\": {{distributorId}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/clients/{{testClientId}}",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"clients",
										"{{testClientId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search for a client by name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var clientTypeArray = [\"PRODUCER\", \"DISTRIBUTOR\"]\r",
											"var clientType = clientTypeArray[_.random(0, clientTypeArray.length - 1)]\r",
											"\r",
											"pm.collectionVariables.set('clientType', clientType)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"searchText\": \"{{testClientName}}\",\r\n  \"clientType\": \"{{clientType}}\",\r\n  \"distributor\": {{distributorId}},\r\n  \"country\": {{сontryId}},\r\n  \"city\": {{cityId}},\r\n  \"sorting\": [\r\n    {\r\n      \"type\": \"{{typeSorting}}\",\r\n      \"order\": \"{{order}}\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/clients/search",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"clients",
										"search"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search for a client by country code",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var clientTypeArray = [\"PRODUCER\", \"DISTRIBUTOR\"]\r",
											"var clientType = clientTypeArray[_.random(0, clientTypeArray.length - 1)]\r",
											"\r",
											"pm.collectionVariables.set('clientType', clientType)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"searchText\": \"{{countryCode}}\",\r\n  \"clientType\": \"{{clientType}}\",\r\n  \"distributor\": {{distributorId}},\r\n  \"country\": {{сontryId}},\r\n  \"city\": {{cityId}},\r\n  \"sorting\": [\r\n    {\r\n      \"type\": \"{{typeSorting}}\",\r\n      \"order\": \"{{order}}\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/clients/search",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"clients",
										"search"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search for a client by city name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var clientTypeArray = [\"PRODUCER\", \"DISTRIBUTOR\"]\r",
											"var clientType = clientTypeArray[_.random(0, clientTypeArray.length - 1)]\r",
											"\r",
											"pm.collectionVariables.set('clientType', clientType)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"searchText\": \"{{cityName}}\",\r\n  \"clientType\": \"{{clientType}}\",\r\n  \"distributor\": {{distributorId}},\r\n  \"country\": {{сontryId}},\r\n  \"city\": {{cityId}},\r\n  \"sorting\": [\r\n    {\r\n      \"type\": \"{{typeSorting}}\",\r\n      \"order\": \"{{order}}\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/clients/search",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"clients",
										"search"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search for a client by description",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var clientTypeArray = [\"PRODUCER\", \"DISTRIBUTOR\"]\r",
											"var clientType = clientTypeArray[_.random(0, clientTypeArray.length - 1)]\r",
											"\r",
											"pm.collectionVariables.set('clientType', clientType)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"searchText\": \"test\",\r\n  \"clientType\": \"{{clientType}}\",\r\n  \"distributor\": {{distributorId}},\r\n  \"country\": {{сontryId}},\r\n  \"city\": {{cityId}},\r\n  \"sorting\": [\r\n    {\r\n      \"type\": \"{{typeSorting}}\",\r\n      \"order\": \"{{order}}\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/clients/search",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"clients",
										"search"
									]
								}
							},
							"response": []
						},
						{
							"name": "Client transfer producer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"passClient\": {{testClientId}},\r\n  \"password\": \"{{password}}\",\r\n  \"producer\": 1\r\n}\r\n\r\n// Метод переноса клиента между дистрибьюторами/производителем\r\n// Если клиент у дистрибьютера, то станет у производителя, id которого указан в запросе, и наоборот\r\n\r\n// passClient - id клиента\r\n// password - пароль пользователя выполняющего операцию, для дополнительного контроля",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/clients/pass",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"clients",
										"pass"
									]
								}
							},
							"response": []
						},
						{
							"name": "Client transfer distributor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"passClient\": {{testClientId}},\r\n  \"password\": \"{{password}}\",\r\n  \"distributor\": {{distributorId}}\r\n}\r\n\r\n// Метод переноса клиента между дистрибьюторами/производителем\r\n// Если клиент у дистрибьютера, то станет у производителя, id которого указан в запросе, и наоборот\r\n\r\n// passClient - id клиента\r\n// password - пароль пользователя выполняющего операцию, для дополнительного контроля",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/clients/pass",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"clients",
										"pass"
									]
								}
							},
							"response": []
						},
						{
							"name": "Client filter by country",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"country\": {{сontryId}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/clients/search",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"clients",
										"search"
									]
								}
							},
							"response": []
						},
						{
							"name": "Client filter by country and city",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"country\": {{сontryId}},\r\n  \"city\": {{cityId}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/clients/search",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"clients",
										"search"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete client",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/clients/{{testClientId}}",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"clients",
										"{{testClientId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "7. Admin.Devices",
					"item": [
						{
							"name": "7.1. Create data",
							"item": [
								{
									"name": "Create a producer client",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json(); // ответный джсон сохраним в переменную \r",
													"\r",
													"console.log('responseBody = ', responseBody);\r",
													"\r",
													"if(pm.response.code === 201){\r",
													"    pm.collectionVariables.set(\"producersClientId\", jsonData.result.id)\r",
													"    pm.collectionVariables.set('producersClientName', jsonData.result.name)\r",
													"}\r",
													"\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\":\"{{$randomFullName}}\",\r\n  \"city\": {{cityId}},\r\n  \"address\": \"{{$randomStreetAddress}}\",\r\n  \"phone\": \"{{phone}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"notes\": \"Test client\",\r\n  \"producer\": 1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/clients",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"clients"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create  test device",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var alphabetAndNumbers = [\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]\r",
													"\r",
													"\r",
													"//Генерим имя установки\r",
													"var nameTestDeviceArray = ['Device1', 'Device2', 'Device3', 'Device4',  'Device5', 'Device6', 'Device7', 'Device8', 'Device9', 'Device10', 'Device11', 'Device12', 'Device13', 'Device14', 'Device15', 'Device16', 'Device17', 'Device18']\r",
													"\r",
													"var nameTestDevice = nameTestDeviceArray[_.random(0, nameTestDeviceArray.length)]\r",
													"pm.collectionVariables.set('nameTestDevice', nameTestDevice)\r",
													"console.log(\"nameTestDevice = \", nameTestDevice) \r",
													"\r",
													"//Генерим модель\r",
													"var modelDevice = _.random(1, 4)\r",
													"pm.collectionVariables.set('modelDevice', modelDevice)\r",
													"console.log('modelDevice', modelDevice)\r",
													"\r",
													"//Генерим серийный номер\r",
													"var serialNumber = \"\"\r",
													"for (let i=0; i<9; i++) {\r",
													"    serialNumber += alphabetAndNumbers[_.random(0, alphabetAndNumbers.length)]\r",
													"}\r",
													"pm.collectionVariables.set('serialNumber', serialNumber)\r",
													"\r",
													"//Генерим дату приемки и отправки установки. R специально добавлена в конце названия\r",
													"var receiveDateTimeR = new Date().getTime() - 86400000\r",
													"var dispatchDateTimeR = new Date().getTime() + 86400000\r",
													"console.log('receiveDateTimeR', receiveDateTimeR)\r",
													"pm.collectionVariables.set('receiveDateTimeR', receiveDateTimeR)\r",
													"pm.collectionVariables.set('dispatchDateTimeR', dispatchDateTimeR)\r",
													"\r",
													"\r",
													"//Генерим техническое время работы\r",
													"var technicalOperatingTime = _.random(10000, 30000)\r",
													"pm.collectionVariables.set('technicalOperatingTime', technicalOperatingTime)\r",
													"console.log('technicalOperatingTime', technicalOperatingTime) \r",
													"\r",
													"\r",
													"//Генерим номер лампы\r",
													"var lampNumber = \"\"\r",
													"for (let i=0; i<9; i++) {\r",
													"    lampNumber += alphabetAndNumbers[_.random(0, alphabetAndNumbers.length)]\r",
													"}\r",
													"pm.collectionVariables.set('lampNumber', lampNumber)\r",
													"\r",
													"\r",
													" //Генерим время работы лампы\r",
													"var lampOperatingTime = _.random(10000000, 99999999);\r",
													"pm.collectionVariables.set('lampOperatingTime', lampOperatingTime)\r",
													"console.log('lampOperatingTime', lampOperatingTime)\r",
													"\r",
													" //Генерим сенсор лампы\r",
													"var lampPhotoSensor = _.random(1, 99);\r",
													"pm.collectionVariables.set('lampPhotoSensor', lampPhotoSensor);\r",
													"console.log('lampPhotoSensor', lampPhotoSensor)\r",
													"\r",
													"\r",
													"//Генерим код доступа\r",
													"var accessCode = \"\"\r",
													"for (let i=0; i<9; i++) {\r",
													"    accessCode += alphabetAndNumbers[_.random(0, alphabetAndNumbers.length)]\r",
													"}\r",
													"pm.collectionVariables.set('accessCode', accessCode)\r",
													"\r",
													"//Генерим версию установки\r",
													"var deviceUpdateVersionForTestDevice = _.random(1, 5)\r",
													"pm.collectionVariables.set('deviceUpdateVersionForTestDevice', deviceUpdateVersionForTestDevice)\r",
													"console.log('deviceUpdateVersionForTestDevice', deviceUpdateVersionForTestDevice)\r",
													"\r",
													"//Генерим ПДУ установки\r",
													"var pduUpdateVersionForTestDevice = _.random(6, 10)\r",
													"pm.collectionVariables.set(\"pduUpdateVersionForTestDevice\", pduUpdateVersionForTestDevice)\r",
													"console.log(\"pduUpdateVersionForTestDevice\", pduUpdateVersionForTestDevice)\r",
													"\r",
													"//Генерим состояние установки\r",
													"var stateArray = [\"WORK\", \"WARN\", \"ERROR\"]\r",
													"var state = stateArray[_.random(0, 2)]\r",
													"pm.collectionVariables.set('state', state)\r",
													"console.log('state', state)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"if(pm.response.code === 201){\r",
													"    pm.collectionVariables.set(\"testDeviceId\", jsonData.result.id); //  из ответного джсона возьмет поле id  и сохранит в переменную testDistributorsId\r",
													"}\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"{{nameTestDevice}}\",\r\n  \"model\": {{modelDevice}},\r\n  \"serialNumber\": \"{{serialNumber}}\",\r\n  \"receiveDateTime\": {{dispatchDateTimeR}},\r\n  \"dispatchDateTime\": {{dispatchDateTimeR}},\r\n  \"technicalOperatingTime\": {{technicalOperatingTime}},\r\n  \"lampNumber\": \"{{lampNumber}}\",\r\n  \"lampOperatingTime\": {{lampOperatingTime}},\r\n  \"lampPhotoSensor\": {{lampPhotoSensor}},\r\n  \"accessCode\": \"{{accessCode}}\",\r\n  \"deviceUpdateVersion\": {{deviceUpdateVersionForTestDevice}},\r\n  \"pduUpdateVersion\": {{pduUpdateVersionForTestDevice}},\r\n  \"city\": {{cityId}},\r\n  \"state\": \"{{state}}\",\r\n  \"notes\": \"test\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "7.2. Get and update",
							"item": [
								{
									"name": "Get device",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/{{testDeviceId}}",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"{{testDeviceId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update test device",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var alphabetAndNumbers = [\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]\r",
													"\r",
													"//Генерим имя установки\r",
													"var nameTestDeviceArray = ['Device1', 'Device2', 'Device3', 'Device4',  'Device5', 'Device6', 'Device7', 'Device8', 'Device9', 'Device10', 'Device11', 'Device12', 'Device13', 'Device14', 'Device15', 'Device16', 'Device17', 'Device18']\r",
													"\r",
													"var nameTestDevice = nameTestDeviceArray[_.random(0, nameTestDeviceArray.length)]\r",
													"pm.collectionVariables.set('nameTestDevice', nameTestDevice)\r",
													"\r",
													"//Генерим модель\r",
													"var modelDevice = _.random(1, 4)\r",
													"pm.collectionVariables.set('modelDevice', modelDevice)\r",
													"\r",
													"//Генерим серийный номер\r",
													"var serialNumber = \"\"\r",
													"for (let i=0; i<9; i++) {\r",
													"    serialNumber += alphabetAndNumbers[_.random(0, alphabetAndNumbers.length)]\r",
													"}\r",
													"pm.collectionVariables.set('serialNumber', serialNumber)\r",
													"\r",
													"//Генерим время приемки и отправки установки. R специально добавлена в конце названия\r",
													"//В массиве указаны количество дней в милисекундах\r",
													"var arrayOfDays = [86400000, 172800000, 259200000, 345600000, 432000000, 518400000, 604800000, 691200000,777600000, 864000000]\r",
													"\r",
													"var receiveDateTimeR = new Date().getTime() - arrayOfDays[_.random(0, arrayOfDays.length)]\r",
													"var dispatchDateTimeR = new Date().getTime() + arrayOfDays[_.random(0, arrayOfDays.length)]\r",
													"pm.collectionVariables.set('receiveDateTimeR', receiveDateTimeR)\r",
													"pm.collectionVariables.set('dispatchDateTimeR', dispatchDateTimeR)\r",
													"\r",
													"\r",
													"//Генерим техническое время работы\r",
													"var technicalOperatingTime = _.random(10000, 30000)\r",
													"pm.collectionVariables.set('technicalOperatingTime', technicalOperatingTime)\r",
													"\r",
													"//Генерим номер лампы\r",
													"var lampNumber = \"\"\r",
													"for (let i=0; i<9; i++) {\r",
													"    lampNumber += alphabetAndNumbers[_.random(0, alphabetAndNumbers.length)]\r",
													"}\r",
													"pm.collectionVariables.set('lampNumber', lampNumber)\r",
													"\r",
													"\r",
													" //Генерим время работы лампы\r",
													"var lampOperatingTime = _.random(10000000, 99999999);\r",
													"pm.collectionVariables.set('lampOperatingTime', lampOperatingTime)\r",
													"\r",
													" //Генерим сенсор лампы\r",
													"var lampPhotoSensor = _.random(1, 99);\r",
													"pm.collectionVariables.set('lampPhotoSensor', lampPhotoSensor)\r",
													"\r",
													"\r",
													"//Генерим код доступа\r",
													"var accessCode = \"\"\r",
													"for (let i=0; i<9; i++) {\r",
													"    accessCode += alphabetAndNumbers[_.random(0, alphabetAndNumbers.length)]\r",
													"}\r",
													"pm.collectionVariables.set('accessCode', accessCode)\r",
													"\r",
													"//Генерим версию установки\r",
													"var deviceUpdateVersionForTestDevice = _.random(1, 5)\r",
													"pm.collectionVariables.set('deviceUpdateVersionForTestDevice', deviceUpdateVersionForTestDevice)\r",
													"\r",
													"//Генерим ПДУ установки\r",
													"var pduUpdateVersionForTestDevice = _.random(6, 10)\r",
													"pm.collectionVariables.set(\"pduUpdateVersionForTestDevice\", pduUpdateVersionForTestDevice)\r",
													"\r",
													"//Генерим состояние установки\r",
													"var stateArray = [\"WORK\", \"WARN\", \"ERROR\"]\r",
													"var state = stateArray[_.random(0, 2)]\r",
													"console.log('state = ', state)\r",
													"pm.collectionVariables.set('state', state)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"{{nameTestDevice}}\",\r\n  \"model\": {{modelDevice}},\r\n  \"serialNumber\": \"{{serialNumber}}\",\r\n  \"receiveDateTime\": {{receiveDateTimeR}},\r\n  \"dispatchDateTime\": {{dispatchDateTimeR}},\r\n  \"technicalOperatingTime\": {{technicalOperatingTime}},\r\n  \"lampNumber\": \"{{lampNumber}}\",\r\n  \"lampOperatingTime\": {{lampOperatingTime}},\r\n  \"lampPhotoSensor\": {{lampPhotoSensor}},\r\n  \"accessCode\": \"{{accessCode}}\",\r\n  \"deviceUpdateVersion\": {{deviceUpdateVersionForTestDevice}},\r\n  \"pduUpdateVersion\": {{pduUpdateVersionForTestDevice}},\r\n  \"city\": {{cityId}},\r\n  \"state\": \"{{state}}\",\r\n  \"notes\": \"test notes\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/{{testDeviceId}}",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"{{testDeviceId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "7.3. Pass device",
							"item": [
								{
									"name": "Pass devices to the producer",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"devices\": [\r\n     {{testDeviceId}}\r\n  ],\r\n  \"producer\": 1,\r\n  \"password\": \"{{password}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/pass",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"pass"
											]
										}
									},
									"response": []
								},
								{
									"name": "Returning devices to the producer",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"devices\": [\r\n     {{testDeviceId}}\r\n  ],\r\n  \"producer\": 1,\r\n  \"password\": \"{{password}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/pass",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"pass"
											]
										}
									},
									"response": []
								},
								{
									"name": "Pass devices to the distributor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"devices\": [\r\n    {{testDeviceId}}\r\n  ],\r\n  \"distributor\": {{distributorId}},\r\n  \"password\": \"{{password}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/pass",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"pass"
											]
										}
									},
									"response": []
								},
								{
									"name": "Pass devices to the client",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"devices\": [\r\n     {{testDeviceId}}\r\n  ],\r\n  \"client\": {{clientId}},\r\n  \"password\": \"{{password}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/pass",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"pass"
											]
										}
									},
									"response": []
								},
								{
									"name": "Returning devices to the distributor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"devices\": [\r\n    {{testDeviceId}}\r\n  ],\r\n  \"distributor\": {{distributorId}},\r\n  \"password\": \"{{password}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/pass",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"pass"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "7.4. Search device",
							"item": [
								{
									"name": "Search a device by distributor",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//Генерим состояние установки\r",
													"var stateArray = [\"WORK\", \"WARN\", \"ERROR\"]\r",
													"var state = stateArray[_.random(0, stateArray.length - 1)]\r",
													"console.log('state = ', state)\r",
													"pm.collectionVariables.set('state', state)\r",
													"\r",
													"\r",
													"//Генерим по какому полю будем сортировать результаты и тип сортировки\r",
													"var typeArray = [\"ID\", \"SERIAL_NUMBER\", \"MODEL\", \"RECEIVE_DATE_TIME\", \"DISPATCH_DATE_TIME\", \"COUNTRY\", \"WARRANTY\", \"STATUS\", \"STATE\"]\r",
													"var sortTypeForDeviceSearch = typeArray[_.random(0, typeArray.length - 1)]\r",
													"console.log('sortTypeForDeviceSearch = ', sortTypeForDeviceSearch)\r",
													"pm.collectionVariables.set(\"sortTypeForDeviceSearch\", sortTypeForDeviceSearch)\r",
													"\r",
													"var orderArray = [\"ASC\", \"DESC\"]\r",
													"var order =  orderArray[_.random(0, orderArray.length - 1)]\r",
													"console.log(\"ORDER = \", order)\r",
													"pm.collectionVariables.set(\"order\", order)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"searchText\": \"{{distributorName}}\",\r\n  \"sorting\": [\r\n    {\r\n      \"type\": \"{{sortTypeForDeviceSearch}}\",\r\n      \"order\": \"{{order}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search a device by serial number",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//Генерим состояние установки\r",
													"var stateArray = [\"WORK\", \"WARN\", \"ERROR\"]\r",
													"var state = stateArray[_.random(0, stateArray.length - 1)]\r",
													"console.log('state = ', state)\r",
													"pm.collectionVariables.set('state', state)\r",
													"\r",
													"\r",
													"//Генерим по какому полю будем сортировать результаты и тип сортировки\r",
													"var typeArray = [\"ID\", \"SERIAL_NUMBER\", \"MODEL\", \"RECEIVE_DATE_TIME\", \"DISPATCH_DATE_TIME\", \"COUNTRY\", \"WARRANTY\", \"STATUS\", \"STATE\"]\r",
													"var sortTypeForDeviceSearch = typeArray[_.random(0, typeArray.length - 1)]\r",
													"console.log('sortTypeForDeviceSearch = ', sortTypeForDeviceSearch)\r",
													"pm.collectionVariables.set(\"sortTypeForDeviceSearch\", sortTypeForDeviceSearch)\r",
													"\r",
													"var orderArray = [\"ASC\", \"DESC\"]\r",
													"var order =  orderArray[_.random(0, orderArray.length - 1)]\r",
													"console.log(\"ORDER = \", order)\r",
													"pm.collectionVariables.set(\"order\", order)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"searchText\": \"{{serialNumber}}\",\r\n  \"sorting\": [\r\n    {\r\n      \"type\": \"{{sortTypeForDeviceSearch}}\",\r\n      \"order\": \"{{order}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search a device by city",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//Генерим состояние установки\r",
													"var stateArray = [\"WORK\", \"WARN\", \"ERROR\"]\r",
													"var state = stateArray[_.random(0, stateArray.length - 1)]\r",
													"console.log('state = ', state)\r",
													"pm.collectionVariables.set('state', state)\r",
													"\r",
													"\r",
													"//Генерим по какому полю будем сортировать результаты и тип сортировки\r",
													"var typeArray = [\"ID\", \"SERIAL_NUMBER\", \"MODEL\", \"RECEIVE_DATE_TIME\", \"DISPATCH_DATE_TIME\", \"COUNTRY\", \"WARRANTY\", \"STATUS\", \"STATE\"]\r",
													"var sortTypeForDeviceSearch = typeArray[_.random(0, typeArray.length - 1)]\r",
													"console.log('sortTypeForDeviceSearch = ', sortTypeForDeviceSearch)\r",
													"pm.collectionVariables.set(\"sortTypeForDeviceSearch\", sortTypeForDeviceSearch)\r",
													"\r",
													"var orderArray = [\"ASC\", \"DESC\"]\r",
													"var order =  orderArray[_.random(0, orderArray.length - 1)]\r",
													"console.log(\"ORDER = \", order)\r",
													"pm.collectionVariables.set(\"order\", order)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"searchText\": \"{{cityName}}\",\r\n  \"sorting\": [\r\n    {\r\n      \"type\": \"{{sortTypeForDeviceSearch}}\",\r\n      \"order\": \"{{order}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search a device by note",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//Генерим состояние установки\r",
													"var stateArray = [\"WORK\", \"WARN\", \"ERROR\"]\r",
													"var state = stateArray[_.random(0, stateArray.length - 1)]\r",
													"console.log('state = ', state)\r",
													"pm.collectionVariables.set('state', state)\r",
													"\r",
													"\r",
													"//Генерим по какому полю будем сортировать результаты и тип сортировки\r",
													"var typeArray = [\"ID\", \"SERIAL_NUMBER\", \"MODEL\", \"RECEIVE_DATE_TIME\", \"DISPATCH_DATE_TIME\", \"COUNTRY\", \"WARRANTY\", \"STATUS\", \"STATE\"]\r",
													"var sortTypeForDeviceSearch = typeArray[_.random(0, typeArray.length - 1)]\r",
													"console.log('sortTypeForDeviceSearch = ', sortTypeForDeviceSearch)\r",
													"pm.collectionVariables.set(\"sortTypeForDeviceSearch\", sortTypeForDeviceSearch)\r",
													"\r",
													"var orderArray = [\"ASC\", \"DESC\"]\r",
													"var order =  orderArray[_.random(0, orderArray.length - 1)]\r",
													"console.log(\"ORDER = \", order)\r",
													"pm.collectionVariables.set(\"order\", order)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"searchText\": \"test\",\r\n  \"sorting\": [\r\n    {\r\n      \"type\": \"{{sortTypeForDeviceSearch}}\",\r\n      \"order\": \"{{order}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search device companies",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"searchText\": \"{{distributorName}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/company/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"company",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search device histories",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/histories/{{testDeviceId}}",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"histories",
												"{{testDeviceId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search device errors",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/errors/{{testDeviceId}}",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"errors",
												"{{testDeviceId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "7.5. Device filtering",
							"item": [
								{
									"name": "Device filter by user",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"company\": {\r\n    \"type\": \"CLIENT\",\r\n    \"id\": {{clientId}}\r\n  }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Device filter by distributor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"company\": {\r\n    \"type\": \"DISTRIBUTOR\",\r\n    \"id\": {{distributorId}}\r\n  }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Device filter by producer",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"company\": {\r\n    \"type\": \"PRODUCER\",\r\n    \"id\": 1\r\n  }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Device filter by \"Running\" state",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"state\": \"WORK\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Device filter by \"Warn\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"state\": \"WARN\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Filter device by status \"Not Working\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"state\": \"ERROR\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Filter device by date of acceptance (from)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//Генерим дату приемки установки. R специально добавлена в конце названия\r",
													"var array = [0, 86400000, 172800000, 259200000, 345600000, 432000000, 518400000, 604800000]\r",
													"var receiveDateTimeR = new Date().getTime() - array[_.random(0, array.length - 1)]\r",
													"pm.collectionVariables.set('receiveDateTimeR', receiveDateTimeR)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"receiveDateTimeFrom\": {{receiveDateTimeR}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Filter device by date of acceptance (before)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//Генерим дату приемки и отправки установки. R специально добавлена в конце названия\r",
													"var array = [0, 86400000, 172800000, 259200000, 345600000, 432000000, 518400000, 604800000]\r",
													"var receiveDateTimeR = new Date().getTime() + array[_.random(0, array.length - 1)]\r",
													"pm.collectionVariables.set('receiveDateTimeR', receiveDateTimeR)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"receiveDateTimeTo\": {{receiveDateTimeR}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Filter device by date of dispatch (from)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//Генерим дату приемки и отправки установки. R специально добавлена в конце названия\r",
													"var array = [0, 86400000, 172800000, 259200000, 345600000, 432000000, 518400000, 604800000]\r",
													"var dispatchDateTimeR = new Date().getTime() - array[_.random(0, array.length - 1)]\r",
													"pm.collectionVariables.set('dispatchDateTimeR', dispatchDateTimeR)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"dispatchDateTimeFrom\": {{dispatchDateTimeR}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Filter device by date of dispatch (before)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//Генерим дату приемки и отправки установки. R специально добавлена в конце названия\r",
													"var array = [0, 86400000, 172800000, 259200000, 345600000, 432000000, 518400000, 604800000]\r",
													"var dispatchDateTimeR = new Date().getTime() + array[_.random(0, array.length - 1)]\r",
													"pm.collectionVariables.set('dispatchDateTimeR', dispatchDateTimeR)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"dispatchDateTimeTo\": {{dispatchDateTimeR}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Filter device by serial number (from)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"serialNumberFrom\": \"1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Filter device by serial number (before)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"serialNumbeTo\": \"z\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Comprehensive filtration test №1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//Генерим дату приемки и отправки установки. R специально добавлена в конце названия\r",
													"var array = [0, 86400000, 172800000, 259200000, 345600000, 432000000, 518400000, 604800000]\r",
													"var receiveDateTimeR = new Date().getTime() - array[_.random(0, array.length - 1)]\r",
													"var dispatchDateTimeR = new Date().getTime() - array[_.random(0, array.length - 1)]\r",
													"\r",
													"pm.collectionVariables.set('receiveDateTimeR', receiveDateTimeR)\r",
													"pm.collectionVariables.set('dispatchDateTimeR', dispatchDateTimeR)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"state\": \"ERROR\",\r\n  \"company\": {\r\n    \"type\": \"CLIENT\",\r\n    \"id\": {{clientId}}\r\n  },\r\n  \"receiveDateTimeFrom\": {{receiveDateTimeR}},\r\n  \"dispatchDateTimeFrom\": {{dispatchDateTimeR}},\r\n  \"serialNumberFrom\": \"1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Comprehensive filtration test №2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//Генерим дату приемки и отправки установки. R специально добавлена в конце названия\r",
													"var array = [0, 86400000, 172800000, 259200000, 345600000, 432000000, 518400000, 604800000]\r",
													"var receiveDateTimeR = new Date().getTime() - array[_.random(0, array.length - 1)]\r",
													"var dispatchDateTimeR = new Date().getTime() + array[_.random(0, array.length - 1)]\r",
													"\r",
													"pm.collectionVariables.set('receiveDateTimeR', receiveDateTimeR)\r",
													"pm.collectionVariables.set('dispatchDateTimeR', dispatchDateTimeR)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"state\": \"WARN\",\r\n  \"company\": {\r\n    \"type\": \"DISTRIBUTOR\",\r\n    \"id\": {{distributorId}}\r\n  },\r\n  \"receiveDateTimeFrom\": {{receiveDateTimeR}},\r\n  \"dispatchDateTimeTo\": {{dispatchDateTimeR}},\r\n  \"serialNumberFrom\": \"1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Comprehensive filtration test №3",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//Генерим дату приемки и отправки установки. R специально добавлена в конце названия\r",
													"var array = [0, 86400000, 172800000, 259200000, 345600000, 432000000, 518400000, 604800000]\r",
													"var receiveDateTimeR = new Date().getTime() + array[_.random(0, array.length - 1)]\r",
													"var dispatchDateTimeR = new Date().getTime() - array[_.random(0, array.length - 1)]\r",
													"\r",
													"pm.collectionVariables.set('receiveDateTimeR', receiveDateTimeR)\r",
													"pm.collectionVariables.set('dispatchDateTimeR', dispatchDateTimeR)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"state\": \"ERROR\",\r\n  \"company\": {\r\n    \"type\": \"DISTRIBUTOR\",\r\n    \"id\": {{distributorId}}\r\n  },\r\n  \"receiveDateTimeTo\": {{receiveDateTimeR}},\r\n  \"dispatchDateTimeFrom\": {{dispatchDateTimeR}},\r\n  \"serialNumberTo\": \"z\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Comprehensive filtration test №4",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//Генерим дату приемки и отправки установки. R специально добавлена в конце названия\r",
													"var array = [0, 86400000, 172800000, 259200000, 345600000, 432000000, 518400000, 604800000]\r",
													"var receiveDateTimeR = new Date().getTime() + array[_.random(0, array.length - 1)]\r",
													"var dispatchDateTimeR = new Date().getTime() - array[_.random(0, array.length - 1)]\r",
													"\r",
													"pm.collectionVariables.set('receiveDateTimeR', receiveDateTimeR)\r",
													"pm.collectionVariables.set('dispatchDateTimeR', dispatchDateTimeR)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"state\": \"WORK\",\r\n  \"company\": {\r\n    \"type\": \"DISTRIBUTOR\",\r\n    \"id\": {{distributorId}}\r\n  },\r\n  \"receiveDateTimeTo\": {{receiveDateTimeR}},\r\n  \"dispatchDateTimeFrom\": {{dispatchDateTimeR}},\r\n  \"serialNumberTo\": \"z\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Comprehensive filtration test №5",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//Генерим дату приемки и отправки установки. R специально добавлена в конце названия\r",
													"var array = [0, 86400000, 172800000, 259200000, 345600000, 432000000, 518400000, 604800000]\r",
													"var receiveDateTimeR = new Date().getTime() - array[_.random(0, array.length - 1)]\r",
													"var dispatchDateTimeR = new Date().getTime() - array[_.random(0, array.length - 1)]\r",
													"\r",
													"pm.collectionVariables.set('receiveDateTimeR', receiveDateTimeR)\r",
													"pm.collectionVariables.set('dispatchDateTimeR', dispatchDateTimeR)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"state\": \"ERROR\",\r\n  \"company\": {\r\n    \"type\": \"PRODUCER\",\r\n    \"id\": 1\r\n  },\r\n  \"receiveDateTimeFrom\": {{receiveDateTimeR}},\r\n  \"dispatchDateTimeFrom\": {{dispatchDateTimeR}},\r\n  \"serialNumberFrom\": \"1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Comprehensive filtration test №6",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//Генерим дату приемки и отправки установки. R специально добавлена в конце названия\r",
													"var array = [0, 86400000, 172800000, 259200000, 345600000, 432000000, 518400000, 604800000]\r",
													"var receiveDateTimeR = new Date().getTime() - array[_.random(0, array.length - 1)]\r",
													"var dispatchDateTimeR = new Date().getTime() - array[_.random(0, array.length - 1)]\r",
													"\r",
													"pm.collectionVariables.set('receiveDateTimeR', receiveDateTimeR)\r",
													"pm.collectionVariables.set('dispatchDateTimeR', dispatchDateTimeR)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"state\": \"WORK\",\r\n  \"company\": {\r\n    \"type\": \"PRODUCER\",\r\n    \"id\": 1\r\n  },\r\n  \"receiveDateTimeFrom\": {{receiveDateTimeR}},\r\n  \"dispatchDateTimeFrom\": {{dispatchDateTimeR}},\r\n  \"serialNumberFrom\": \"1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Comprehensive filtration test №7",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//Генерим дату приемки и отправки установки. R специально добавлена в конце названия\r",
													"var array = [0, 86400000, 172800000, 259200000, 345600000, 432000000, 518400000, 604800000]\r",
													"var receiveDateTimeR = new Date().getTime() - array[_.random(0, array.length - 1)]\r",
													"var dispatchDateTimeR = new Date().getTime() + array[_.random(0, array.length - 1)]\r",
													"\r",
													"pm.collectionVariables.set('receiveDateTimeR', receiveDateTimeR)\r",
													"pm.collectionVariables.set('dispatchDateTimeR', dispatchDateTimeR)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"state\": \"WORK\",\r\n  \"company\": {\r\n    \"type\": \"PRODUCER\",\r\n    \"id\": 1\r\n  },\r\n  \"receiveDateTimeFrom\": {{receiveDateTimeR}},\r\n  \"dispatchDateTimeFrom\": {{dispatchDateTimeR}},\r\n  \"serialNumberFrom\": \"1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Comprehensive filtration test №8",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//Генерим дату приемки и отправки установки. R специально добавлена в конце названия\r",
													"var array = [0, 86400000, 172800000, 259200000, 345600000, 432000000, 518400000, 604800000]\r",
													"var receiveDateTimeR = new Date().getTime() + array[_.random(0, array.length - 1)]\r",
													"var dispatchDateTimeR = new Date().getTime() + array[_.random(0, array.length - 1)]\r",
													"\r",
													"pm.collectionVariables.set('receiveDateTimeR', receiveDateTimeR)\r",
													"pm.collectionVariables.set('dispatchDateTimeR', dispatchDateTimeR)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"state\": \"WARN\",\r\n  \"company\": {\r\n    \"type\": \"PRODUCER\",\r\n    \"id\": 1\r\n  },\r\n  \"receiveDateTimeTo\": {{receiveDateTimeR}},\r\n  \"dispatchDateTimeTo\": {{dispatchDateTimeR}},\r\n  \"serialNumberTo\": \"z\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Comprehensive filtration test №9",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//Генерим дату приемки и отправки установки. R специально добавлена в конце названия\r",
													"var array = [0, 86400000, 172800000, 259200000, 345600000, 432000000, 518400000, 604800000]\r",
													"var receiveDateTimeR = new Date().getTime() - array[_.random(0, array.length - 1)]\r",
													"var dispatchDateTimeR = new Date().getTime() + array[_.random(0, array.length - 1)]\r",
													"\r",
													"pm.collectionVariables.set('receiveDateTimeR', receiveDateTimeR)\r",
													"pm.collectionVariables.set('dispatchDateTimeR', dispatchDateTimeR)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"state\": \"WORK\",\r\n  \"company\": {\r\n    \"type\": \"CLIENT\",\r\n    \"id\": {{clientId}}\r\n  },\r\n  \"receiveDateTimeFrom\": {{receiveDateTimeR}},\r\n  \"dispatchDateTimeTo\": {{dispatchDateTimeR}},\r\n  \"serialNumberFrom\": \"1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Comprehensive filtration test №10",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//Генерим дату приемки и отправки установки. R специально добавлена в конце названия\r",
													"var array = [0, 86400000, 172800000, 259200000, 345600000, 432000000, 518400000, 604800000]\r",
													"var receiveDateTimeR = new Date().getTime() + array[_.random(0, array.length - 1)]\r",
													"var dispatchDateTimeR = new Date().getTime() - array[_.random(0, array.length - 1)]\r",
													"\r",
													"pm.collectionVariables.set('receiveDateTimeR', receiveDateTimeR)\r",
													"pm.collectionVariables.set('dispatchDateTimeR', dispatchDateTimeR)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"state\": \"WORK\",\r\n  \"company\": {\r\n    \"type\": \"CLIENT\",\r\n    \"id\": {{clientId}}\r\n  },\r\n  \"receiveDateTimeTo\": {{receiveDateTimeR}},\r\n  \"dispatchDateTimeFrom\": {{dispatchDateTimeR}},\r\n  \"serialNumberTo\": \"z\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Comprehensive filtration test №11",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//Генерим дату приемки и отправки установки. R специально добавлена в конце названия\r",
													"var array = [0, 86400000, 172800000, 259200000, 345600000, 432000000, 518400000, 604800000]\r",
													"var receiveDateTimeR = new Date().getTime() - array[_.random(0, array.length - 1)]\r",
													"var dispatchDateTimeR = new Date().getTime() + array[_.random(0, array.length - 1)]\r",
													"\r",
													"pm.collectionVariables.set('receiveDateTimeR', receiveDateTimeR)\r",
													"pm.collectionVariables.set('dispatchDateTimeR', dispatchDateTimeR)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"state\": \"WARN\",\r\n  \"company\": {\r\n    \"type\": \"CLIENT\",\r\n    \"id\": {{clientId}}\r\n  },\r\n  \"receiveDateTimeFrom\": {{receiveDateTimeR}},\r\n  \"dispatchDateTimeTo\": {{dispatchDateTimeR}},\r\n  \"serialNumberFrom\": \"1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Comprehensive filtration test №11 Copy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//Генерим дату приемки и отправки установки. R специально добавлена в конце названия\r",
													"var array = [0, 86400000, 172800000, 259200000, 345600000, 432000000, 518400000, 604800000]\r",
													"var receiveDateTimeR = new Date().getTime() + array[_.random(0, array.length - 1)]\r",
													"var dispatchDateTimeR = new Date().getTime() - array[_.random(0, array.length - 1)]\r",
													"\r",
													"pm.collectionVariables.set('receiveDateTimeR', receiveDateTimeR)\r",
													"pm.collectionVariables.set('dispatchDateTimeR', dispatchDateTimeR)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"state\": \"ERROR\",\r\n  \"company\": {\r\n    \"type\": \"CLIENT\",\r\n    \"id\": {{clientId}}\r\n  },\r\n  \"receiveDateTimeTo\": {{receiveDateTimeR}},\r\n  \"dispatchDateTimeFrom\": {{dispatchDateTimeR}},\r\n  \"serialNumberTo\": \"z\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"search"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "7.6. Delete data",
							"item": [
								{
									"name": "Create a test backup device",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var alphabetAndNumbers = [\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]\r",
													"\r",
													"\r",
													"//Генерим имя установки\r",
													"var nameTestDeviceArray = ['Device1', 'Device2', 'Device3', 'Device4',  'Device5', 'Device6', 'Device7', 'Device8', 'Device9', 'Device10', 'Device11', 'Device12', 'Device13', 'Device14', 'Device15', 'Device16', 'Device17', 'Device18']\r",
													"\r",
													"var nameTestDevice = nameTestDeviceArray[_.random(0, nameTestDeviceArray.length)]\r",
													"pm.collectionVariables.set('nameTestDevice', nameTestDevice)\r",
													"console.log(\"nameTestDevice = \", nameTestDevice) \r",
													"\r",
													"//Генерим модель\r",
													"var modelDevice = _.random(1, 4)\r",
													"pm.collectionVariables.set('modelDevice', modelDevice)\r",
													"console.log('modelDevice', modelDevice)\r",
													"\r",
													"//Генерим серийный номер\r",
													"var serialNumber = \"\"\r",
													"for (let i=0; i<9; i++) {\r",
													"    serialNumber += alphabetAndNumbers[_.random(0, alphabetAndNumbers.length)]\r",
													"}\r",
													"pm.collectionVariables.set('serialNumber', serialNumber)\r",
													"\r",
													"//Генерим время приемки и отправки установки. R специально добавлена в конце названия\r",
													"var receiveDateTimeR = new Date().getTime() - 86400000\r",
													"var dispatchDateTimeR = new Date().getTime() + 86400000\r",
													"console.log('receiveDateTimeR', receiveDateTimeR)\r",
													"pm.collectionVariables.set('receiveDateTimeR', receiveDateTimeR)\r",
													"pm.collectionVariables.set('dispatchDateTimeR', dispatchDateTimeR)\r",
													"\r",
													"\r",
													"//Генерим техническое время работы\r",
													"var technicalOperatingTime = _.random(10000, 30000)\r",
													"pm.collectionVariables.set('technicalOperatingTime', technicalOperatingTime)\r",
													"console.log('technicalOperatingTime', technicalOperatingTime) \r",
													"\r",
													"\r",
													"//Генерим номер лампы\r",
													"var lampNumber = \"\"\r",
													"for (let i=0; i<9; i++) {\r",
													"    lampNumber += alphabetAndNumbers[_.random(0, alphabetAndNumbers.length)]\r",
													"}\r",
													"pm.collectionVariables.set('lampNumber', lampNumber)\r",
													"\r",
													"\r",
													" //Генерим время работы лампы\r",
													"var lampOperatingTime = _.random(10000000, 99999999);\r",
													"pm.collectionVariables.set('lampOperatingTime', lampOperatingTime)\r",
													"console.log('lampOperatingTime', lampOperatingTime)\r",
													"\r",
													" //Генерим сенсор лампы\r",
													"var lampPhotoSensor = _.random(1, 99);\r",
													"pm.collectionVariables.set('lampPhotoSensor', lampPhotoSensor);\r",
													"console.log('lampPhotoSensor', lampPhotoSensor)\r",
													"\r",
													"\r",
													"//Генерим код доступа\r",
													"var accessCode = \"\"\r",
													"for (let i=0; i<9; i++) {\r",
													"    accessCode += alphabetAndNumbers[_.random(0, alphabetAndNumbers.length)]\r",
													"}\r",
													"pm.collectionVariables.set('accessCode', accessCode)\r",
													"\r",
													"//Генерим версию установки\r",
													"var deviceUpdateVersionForTestDevice = _.random(1, 5)\r",
													"pm.collectionVariables.set('deviceUpdateVersionForTestDevice', deviceUpdateVersionForTestDevice)\r",
													"console.log('deviceUpdateVersionForTestDevice', deviceUpdateVersionForTestDevice)\r",
													"\r",
													"//Генерим ПДУ установки\r",
													"var pduUpdateVersionForTestDevice = _.random(6, 10)\r",
													"pm.collectionVariables.set(\"pduUpdateVersionForTestDevice\", pduUpdateVersionForTestDevice)\r",
													"console.log(\"pduUpdateVersionForTestDevice\", pduUpdateVersionForTestDevice)\r",
													"\r",
													"//Генерим состояние установки\r",
													"var stateArray = [\"WORK\", \"WARN\", \"ERROR\"]\r",
													"var state = stateArray[_.random(0, 2)]\r",
													"pm.collectionVariables.set('state', state)\r",
													"console.log('state', state)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"if(pm.response.code === 201){\r",
													"    pm.collectionVariables.set(\"testDevicForArchivingId\", jsonData.result.id); //  из ответного джсона возьмет поле id  и сохранит в переменную testDistributorsId\r",
													"}\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"{{nameTestDevice}}\",\r\n  \"model\": {{modelDevice}},\r\n  \"serialNumber\": \"{{serialNumber}}\",\r\n  \"receiveDateTime\": {{dispatchDateTimeR}},\r\n  \"dispatchDateTime\": {{dispatchDateTimeR}},\r\n  \"technicalOperatingTime\": {{technicalOperatingTime}},\r\n  \"lampNumber\": \"{{lampNumber}}\",\r\n  \"lampOperatingTime\": {{lampOperatingTime}},\r\n  \"lampPhotoSensor\": {{lampPhotoSensor}},\r\n  \"accessCode\": \"{{accessCode}}\",\r\n  \"deviceUpdateVersion\": {{deviceUpdateVersionForTestDevice}},\r\n  \"pduUpdateVersion\": {{pduUpdateVersionForTestDevice}},\r\n  \"city\": {{cityId}},\r\n  \"state\": \"{{state}}\",\r\n  \"notes\": \"test\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete producer client",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/clients/{{producersClientId}}",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"clients",
												"{{producersClientId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete test device",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/{{testDeviceId}}",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"{{testDeviceId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Archive devices",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"devices\": [\r\n    {{testDevicForArchivingId}}\r\n  ],\r\n  \"password\": \"{{password}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/archive",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"devices",
												"archive"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "8. Admin.Users",
					"item": [
						{
							"name": "8.1. Greate data",
							"item": [
								{
									"name": "Create a distributor user",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var array = [\"ADMIN_RESPONSIBLE\", \"ADMIN_COMMON\"]\r",
													"var role = array[_.random(0, array.length - 1)]\r",
													"pm.collectionVariables.set('userRole', role)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"if (pm.response.code === 201) {\r",
													"    pm.collectionVariables.set(\"distibutorUserId\", jsonData.result.id)\r",
													"    pm.collectionVariables.set(\"distibutorUserName\", jsonData.result.name)\r",
													"}\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"username\": \"{{$randomUserName}}\",\r\n  \"name\": \"{{$randomFirstName}}\",\r\n  \"position\": \"{{$randomJobType}}\",\r\n  \"phone\": \"{{phone}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"{{$randomPassword}}\",\r\n  \"distributor\": {{distributorId}},\r\n  \"picture\": {{picture}},\r\n  \"role\": \"{{userRole}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/users",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a producer user",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var array = [\"ADMIN_RESPONSIBLE\", \"ADMIN_COMMON\"]\r",
													"var role = array[_.random(0, array.length - 1)]\r",
													"pm.collectionVariables.set('userRole', role)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"if (pm.response.code === 201) {\r",
													"    pm.collectionVariables.set(\"producerUserId\", jsonData.result.id)\r",
													"    pm.collectionVariables.set(\"producerUserName\", jsonData.result.id)\r",
													"}\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"username\": \"{{$randomUserName}}\",\r\n  \"name\": \"{{$randomFirstName}}\",\r\n  \"position\": \"{{$randomJobType}}\",\r\n  \"phone\": \"{{phone}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"{{$randomPassword}}\",\r\n  \"producer\": 1,\r\n  \"picture\": {{picture}},\r\n  \"role\": \"{{userRole}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/users",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a client user",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var array = [\"ADMIN_RESPONSIBLE\", \"ADMIN_COMMON\", \"PDU_PERFORMER\"]\r",
													"var role = array[_.random(0, array.length - 1)]\r",
													"pm.collectionVariables.set('userRole', role)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"if (pm.response.code === 201) {\r",
													"    pm.collectionVariables.set(\"clientUserId\", jsonData.result.id)\r",
													"    pm.collectionVariables.set(\"clientUserName\", jsonData.result.name)\r",
													"}\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"username\": \"{{$randomUserName}}\",\r\n  \"name\": \"{{$randomFirstName}}\",\r\n  \"position\": \"{{$randomJobType}}\",\r\n  \"phone\": \"{{phone}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"{{$randomPassword}}\",\r\n  \"client\": {{clientId}},\r\n  \"picture\": {{picture}},\r\n  \"role\": \"{{userRole}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/users",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "8.2. Get and update",
							"item": [
								{
									"name": "Get user",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/users/{{userId}}",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update distributor's user",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var array = [\"ADMIN_RESPONSIBLE\", \"ADMIN_COMMON\"]\r",
													"var role = array[_.random(0, array.length - 1)]\r",
													"pm.collectionVariables.set('userRole', role)\r",
													"\r",
													" //генерим картинку для юзера\r",
													"var picture = _.random(1, 24);\r",
													"pm.collectionVariables.set('picture', picture)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"if (pm.response.code === 200) {\r",
													"    pm.collectionVariables.set(\"distibutorUserName\", jsonData.result.name)\r",
													"}\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"{{$randomFirstName}}\",\r\n  \"position\": \"{{$randomJobType}}\",\r\n  \"phone\": \"{{phone}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"notes\": \"Test user\",\r\n  \"picture\": {{picture}},\r\n  \"role\": \"{{userRole}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/users/{{distibutorUserId}}",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users",
												"{{distibutorUserId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update producer's user",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var array = [\"ADMIN_RESPONSIBLE\", \"ADMIN_COMMON\"]\r",
													"var role = array[_.random(0, array.length - 1)]\r",
													"pm.collectionVariables.set('userRole', role)\r",
													"\r",
													" //генерим картинку для юзера\r",
													"var picture = _.random(1, 24);\r",
													"pm.collectionVariables.set('picture', picture)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"if (pm.response.code === 200) {\r",
													"    pm.collectionVariables.set(\"producerUserName\", jsonData.result.id)\r",
													"}\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"{{$randomFirstName}}\",\r\n  \"position\": \"{{$randomJobType}}\",\r\n  \"phone\": \"{{phone}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"notes\": \"Test user\",\r\n  \"picture\": {{picture}},\r\n  \"role\": \"{{userRole}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/users/{{producerUserId}}",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users",
												"{{producerUserId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update client's user",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var array = [\"ADMIN_RESPONSIBLE\", \"ADMIN_COMMON\", \"PDU_PERFORMER\"]\r",
													"var role = array[_.random(0, array.length - 1)]\r",
													"pm.collectionVariables.set('userRole', role)\r",
													"\r",
													" //генерим картинку для юзера\r",
													"var picture = _.random(1, 24);\r",
													"pm.collectionVariables.set('picture', picture)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"if (pm.response.code === 200) {\r",
													"    pm.collectionVariables.set(\"clientUserName\", jsonData.result.name)\r",
													"}\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"{{$randomFirstName}}\",\r\n  \"position\": \"{{$randomJobType}}\",\r\n  \"phone\": \"{{phone}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"notes\": \"Test user\",\r\n  \"picture\": {{picture}},\r\n  \"role\": \"{{userRole}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/users/{{clientUserId}}",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users",
												"{{clientUserId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update user's password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"password\": \"{{$randomPassword}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/users/{{userId}}/password",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users",
												"{{userId}}",
												"password"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "8.3. Search users",
							"item": [
								{
									"name": "Search users",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var array = [\"ADMIN_RESPONSIBLE\", \"ADMIN_COMMON\", \"PDU_PERFORMER\"]\r",
													"var userRoleForSearch = array[_.random(0, array.length - 1)]\r",
													"pm.collectionVariables.set(\"userRoleForSearch\" , userRoleForSearch)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"roles\": [\r\n    \"{{userRoleForSearch}}\"\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/users/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users",
												"search"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "8.4. Search local users",
							"item": [
								{
									"name": "Search for local distributor user by name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"searchText\": \"{{distibutorUserName}}\",\r\n  \"distributor\": {{distributorId}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/users/search/local",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users",
												"search",
												"local"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search for local producer user by name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"searchText\": \"{{producerUserName}}\",\r\n  \"producer\": 1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/users/search/local",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users",
												"search",
												"local"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search for local client users by name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"name\": \"{{clientUserName}}\",\r\n  \"client\": {{clientId}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/users/search/local",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users",
												"search",
												"local"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search for local distributor users by roles",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var array = [\"ADMIN_RESPONSIBLE\", \"ADMIN_COMMON\"]\r",
													"var role = array[_.random(0, array.length - 1)]\r",
													"pm.collectionVariables.set('userRole', role)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"roles\": [\r\n    \"{{userRole}}\"\r\n  ],\r\n  \"distributor\": {{distributorId}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/users/search/local",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users",
												"search",
												"local"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search for local producer users by roles",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var array = [\"ADMIN_RESPONSIBLE\", \"ADMIN_COMMON\"]\r",
													"var role = array[_.random(0, array.length - 1)]\r",
													"pm.collectionVariables.set('userRole', role)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"roles\": [\r\n    \"{{userRole}}\"\r\n  ],\r\n  \"producer\": 1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/users/search/local",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users",
												"search",
												"local"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search for local client users by roles",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var array = [\"ADMIN_RESPONSIBLE\", \"ADMIN_COMMON\", \"PDU_PERFORMER\"]\r",
													"var role = array[_.random(0, array.length - 1)]\r",
													"pm.collectionVariables.set('userRole', role)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"roles\": [\r\n    \"{{userRole}}\"\r\n  ],\r\n  \"client\": {{clientId}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/users/search/local",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users",
												"search",
												"local"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search for local producer users",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"producer\": 1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/users/search/local",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users",
												"search",
												"local"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search for local distributor users",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"distributor\": {{distributorId}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/users/search/local",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users",
												"search",
												"local"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search for local client users",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"client\": {{clientId}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/users/search/local",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users",
												"search",
												"local"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "8.5. Other",
							"item": [
								{
									"name": "New password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/users/password/new",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users",
												"password",
												"new"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "8.6. Delete users",
							"item": [
								{
									"name": "Delete distributor's user",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/users/{{distibutorUserId}}",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users",
												"{{distibutorUserId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete producer's user",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/users/{{producerUserId}}",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users",
												"{{producerUserId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete client's user",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/users/{{clientUserId}}",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users",
												"{{clientUserId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "9. Admin.Updates",
					"item": [
						{
							"name": "Create update",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var array = [\"PDU\", \"DEVICE\"]\r",
											"var typeUpdate = array[_.random(0, array.length - 1)]\r",
											"pm.collectionVariables.set(\"typeUpdate\", typeUpdate)\r",
											"\r",
											"var typeArray = [\"SERIAL_NUMBER\", \"DEVICE_UPDATE_VERSION\", \"PDU_UPDATE_VERSION\"]\r",
											"var updateParamType = typeArray[_.random(0, typeArray.length - 1)]\r",
											"pm.collectionVariables.set(\"updateParamType\", updateParamType)\r",
											"\r",
											"//fileItem - это идентификатор файла обновления\r",
											"//1-20 добавлено скриптом (по ссылкам нет файлов)\r",
											"//21-44 добавлено вручную (файлы по ссылкам есть)\r",
											"var fileItem = _.random(1, 44)\r",
											"pm.collectionVariables.set(\"fileItem\", fileItem)\r",
											"\r",
											"\r",
											"var deliveryTypeArray = [\"LOCAL\", \"GOOGLE_PLAY\", \"PDU_TO_DEVICE\"]\r",
											"var deliveryType = deliveryTypeArray[_.random(0, deliveryTypeArray.length - 1)]\r",
											"pm.collectionVariables.set(\"updateDdeliveryType\", deliveryType)\r",
											"\r",
											"var statusArray = [\"PLAN\", \"READY\"]\r",
											"var updateStatus = statusArray[_.random(0, statusArray.length - 1)]\r",
											"pm.collectionVariables.set(\"updateStatus\", updateStatus)\r",
											"\r",
											"\r",
											"//Генерим дату отправки уведомления\r",
											"var dateArray = [0, 86400000, 172800000, 259200000, 345600000, 432000000, 518400000, 604800000]\r",
											"var notificationSendDateTime = new Date().getTime() - dateArray[_.random(0, dateArray.length - 1)]\r",
											"\r",
											"pm.collectionVariables.set(\"notificationSendDateTime\", notificationSendDateTime)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"if (pm.response.code === 201) {\r",
											"    pm.collectionVariables.set(\"updateId\", jsonData.result.id)\r",
											"}\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"type\": \"{{typeUpdate}}\",\r\n  \"name\": \"{{$randomFileName}}\",\r\n  \"params\": [\r\n    {\r\n      \"paramType\": \"{{updateParamType}}\",\r\n      \"paramSerialNumber\": \"{{$randomAlphaNumeric}}\",\r\n      \"paramDeviceUpdateVersion\": {{deviceUpdateVersion}},\r\n      \"paramPduUpdateVersion\": {{pduUpdateVersion}}\r\n    }\r\n  ],\r\n  \"description\": \"{{$randomNoun}}\",\r\n  \"fileItem\": {{fileItem}},\r\n  \"deliveryType\": \"{{updateDdeliveryType}}\",\r\n  \"status\": \"{{updateStatus}}\",\r\n  \"notificationSend\": {{$randomBoolean}},\r\n  \"notificationSendDateTime\": {{notificationSendDateTime}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/updates",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"updates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/updates/{{updateId}}",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"updates",
										"{{updateId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update update",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var array = [\"PDU\", \"DEVICE\"]\r",
											"var typeUpdate = array[_.random(0, array.length - 1)]\r",
											"pm.collectionVariables.set(\"typeUpdate\", typeUpdate)\r",
											"\r",
											"var typeArray = [\"SERIAL_NUMBER\", \"DEVICE_UPDATE_VERSION\", \"PDU_UPDATE_VERSION\"]\r",
											"var updateParamType = typeArray[_.random(0, typeArray.length - 1)]\r",
											"pm.collectionVariables.set(\"updateParamType\", updateParamType)\r",
											"\r",
											"//fileItem - это идентификатор файла обновления\r",
											"//1-20 добавлено скриптом (по ссылкам нет файлов)\r",
											"//21-44 добавлено вручную (файлы по ссылкам есть)\r",
											"var fileItem = _.random(1, 44)\r",
											"pm.collectionVariables.set(\"fileItem\", fileItem)\r",
											"\r",
											"\r",
											"var deliveryTypeArray = [\"LOCAL\", \"GOOGLE_PLAY\", \"PDU_TO_DEVICE\"]\r",
											"var deliveryType = deliveryTypeArray[_.random(0, deliveryTypeArray.length - 1)]\r",
											"pm.collectionVariables.set(\"updateDdeliveryType\", deliveryType)\r",
											"\r",
											"var statusArray = [\"PLAN\", \"READY\"]\r",
											"var updateStatus = statusArray[_.random(0, statusArray.length - 1)]\r",
											"pm.collectionVariables.set(\"updateStatus\", updateStatus)\r",
											"\r",
											"\r",
											"//Генерим дату отправки уведомления\r",
											"var dateArray = [0, 86400000, 172800000, 259200000, 345600000, 432000000, 518400000, 604800000]\r",
											"var notificationSendDateTime = new Date().getTime() - dateArray[_.random(0, dateArray.length - 1)]\r",
											"pm.collectionVariables.set(\"notificationSendDateTime\", notificationSendDateTime)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"type\": \"{{typeUpdate}}\",\r\n  \"name\": \"{{$randomFileName}}\",\r\n  \"params\": [\r\n    {\r\n      \"paramType\": \"{{updateParamType}}\",\r\n      \"paramSerialNumber\": \"{{$randomAlphaNumeric}}\",\r\n      \"paramDeviceUpdateVersion\": {{deviceUpdateVersion}},\r\n      \"paramPduUpdateVersion\": {{pduUpdateVersion}}\r\n    }\r\n  ],\r\n  \"description\": \"{{$randomNoun}}\",\r\n  \"fileItem\": {{fileItem}},\r\n  \"deliveryType\": \"{{updateDdeliveryType}}\",\r\n  \"status\": \"{{updateStatus}}\",\r\n  \"notificationSend\": {{$randomBoolean}},\r\n  \"notificationSendDateTime\": {{notificationSendDateTime}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/updates/{{updateId}}",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"updates",
										"{{updateId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search updates",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/updates/search",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"updates",
										"search"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get devices for update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"update\": {{updateId}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/updates/devices",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"updates",
										"devices"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search pdu updates",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/updates/pdu",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"updates",
										"pdu"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search device updates",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/updates/device",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"updates",
										"device"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/updates/{{updateId}}",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"updates",
										"{{updateId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "10. Admin.Notifications",
					"item": [
						{
							"name": "Create notification",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var array = [\"DISTRIBUTOR\", \"CLIENT\", \"PDU_PERFORMER\"]\r",
											"var userTypeForNotification = array[_.random(0, array.length - 1)]\r",
											"pm.collectionVariables.set(\"userTypeForNotification\", userTypeForNotification)\r",
											"\r",
											"var sendDateTimeForNotification = new Date().getTime()\r",
											"pm.collectionVariables.set(\"sendDateTimeForNotification\", sendDateTimeForNotification)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"if(pm.response.code === 201) {\r",
											"    pm.collectionVariables.set(\"notificationId\", jsonData.result.id)\r",
											"}\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"{{$randomNoun}}\",\r\n  \"body\": \"{{$randomWords}}\",\r\n  \"userType\": \"{{userTypeForNotification}}\",\r\n  \"country\": {{сontryId}},\r\n  \"deviceModel\": {{modelDevice}},\r\n  \"sendDateTime\": {{sendDateTimeForNotification}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/notifications",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"notifications"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get notification",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/notifications/{{notificationId}}",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"notifications",
										"{{notificationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update notification",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var array = [\"DISTRIBUTOR\", \"CLIENT\", \"PDU_PERFORMER\"]\r",
											"var userTypeForNotification = array[_.random(0, array.length - 1)]\r",
											"pm.collectionVariables.set(\"userTypeForNotification\", userTypeForNotification)\r",
											"\r",
											"var sendDateTimeForNotification = new Date().getTime()\r",
											"pm.collectionVariables.set(\"sendDateTimeForNotification\", sendDateTimeForNotification)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"if(pm.response.code === 200) {\r",
											"    pm.collectionVariables.set(\"titleNotification\", jsonData.result.title)\r",
											"    pm.collectionVariables.set(\"bodyNotification\", jsonData.result.body)\r",
											"}\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"{{$randomNoun}}\",\r\n  \"body\": \"{{$randomWords}}\",\r\n  \"userType\": \"{{userTypeForNotification}}\",\r\n  \"country\": {{сontryId}},\r\n   \"deviceModel\": {{modelDevice}},\r\n  \"sendDateTime\": {{sendDateTimeForNotification}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/notifications/{{notificationId}}",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"notifications",
										"{{notificationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search notifications by title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"searchText\": \"{{titleNotification}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/notifications/search",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"notifications",
										"search"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search notifications by body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"searchText\": \"{{bodyNotification}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/notifications/search",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"notifications",
										"search"
									]
								}
							},
							"response": []
						},
						{
							"name": "Hide notification",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/notifications/hide/{{notificationId}}",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"notifications",
										"hide",
										"{{notificationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete notification",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/notifications/{{notificationId}}",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"notifications",
										"{{notificationId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "11. Admin.Producers",
					"item": [
						{
							"name": "Get producer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/producers",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"producers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update producer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Мелитта\",\r\n  \"city\": 1,\r\n  \"address\": \"{{$randomStreetAddress}}\",\r\n  \"phone\": \"+79999999999\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"notes\": \"{{$randomWords}}\",\r\n  \"warrantyMonths\": {{warrantyMonths}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/admin/producers",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"producers"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "12. Common.Files",
					"item": [
						{
							"name": "Upload  file, module=PROFILE",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moduleArray = [\"UPDATE\", \"CHAT\", \"PROFILE\"]\r",
											"var moduleToLoadFile = moduleArray[_.random(0, moduleArray.length - 1)]\r",
											"pm.collectionVariables.set(\"moduleToLoadFile\", moduleToLoadFile)\r",
											"\r",
											"var previewCompressionModeArray = [\"--\", \"TO_SIZE_500\", \"TO_SIZE_700\", \"TO_SIZE_900\", \"WITHOUT_COMPRESSION\"]\r",
											"var previewCompressionMode = previewCompressionModeArray[_.random(0, previewCompressionModeArray.length - 1)]\r",
											"pm.collectionVariables.set(\"previewCompressionMode\", previewCompressionMode)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"if(pm.response.code === 201) {\r",
											"    pm.collectionVariables.set(\"uuid_for_PROFILE\", jsonData.result.uuid);\r",
											"    pm.collectionVariables.set(\"picture_for_PROFILE\", jsonData.result.id);\r",
											"}\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/Users/rufina/Desktop/хлам/леруа/1488636263147666156.jpg"
										}
									]
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/common/files/upload?module=PROFILE&entityName={{$randomFileName}}",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"common",
										"files",
										"upload"
									],
									"query": [
										{
											"key": "module",
											"value": "PROFILE"
										},
										{
											"key": "entityName",
											"value": "{{$randomFileName}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload file, module=UPDATE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"if(pm.response.code === 201) {\r",
											"    pm.collectionVariables.set(\"uuid_for_UPDATE\", jsonData.result.uuid);\r",
											"    pm.collectionVariables.set(\"picture_for_UPDATE\", jsonData.result.id);\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/Users/rufina/Desktop/хлам/леруа/iceberg-404966_960_720.jpg"
										}
									]
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/common/files/upload?module=UPDATE&entityName={{$randomFileName}}",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"common",
										"files",
										"upload"
									],
									"query": [
										{
											"key": "module",
											"value": "UPDATE"
										},
										{
											"key": "entityName",
											"value": "{{$randomFileName}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET file by  uuid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{melitta}}/common/files/uuid/{{uuid_for_PROFILE}}",
									"host": [
										"{{melitta}}"
									],
									"path": [
										"common",
										"files",
										"uuid",
										"{{uuid_for_PROFILE}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "2. Client",
			"item": [
				{
					"name": "Authorization",
					"item": [
						{
							"name": "1. Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json(); // ответный джсон сохраним в переменную ",
											"",
											"//JSON.parse(responseBody); ",
											"",
											"console.log('responseBody = ', responseBody);",
											"console.log(jsonData.result.authToken); // из ответного джсона возьмет поле authToken",
											"",
											"if(pm.response.code === 200){",
											"    pm.collectionVariables.set(\"access_token\", jsonData.result.authToken)",
											"    pm.collectionVariables.set(\"clientId\", jsonData.result.userId)",
											"     //  из ответного джсона возьмет поле authToken  и сохранит в переменную access_token",
											"}",
											"",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"login\": \"user-1-client-adm-5\",\n  \"password\": \"useruser77\"\n}\n\n//Обязательно проверять, что клиент с таким логином существует в базе\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.melitta.technaxis.com/api/v1/common/auth/login",
									"protocol": "https",
									"host": [
										"api",
										"melitta",
										"technaxis",
										"com"
									],
									"path": [
										"api",
										"v1",
										"common",
										"auth",
										"login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Admin.Structures",
					"item": [
						{
							"name": "Crate data",
							"item": [
								{
									"name": "Create department",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json(); // ответный джсон сохраним в переменную \r",
													"\r",
													"if(pm.response.code === 201){\r",
													"    pm.collectionVariables.set(\"departmentId\", jsonData.result.id)\r",
													"    pm.collectionVariables.set(\"departmentName\", jsonData.result.name)\r",
													"}\r",
													"\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"{{$randomJobType}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/departments",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"departments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create room",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"distanceInRoom\", _.random(1, 15))\r",
													"pm.collectionVariables.set(\"roomVolume\", _.random(1, 15))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json(); // ответный джсон сохраним в переменную \r",
													"\r",
													"if(pm.response.code === 201){\r",
													"    pm.collectionVariables.set(\"roomId\", jsonData.result.id)\r",
													"}\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"{{$randomJobArea}}\",\r\n  \"distance\": {{distanceInRoom}},\r\n  \"volume\": {{roomVolume}},\r\n  \"department\": {{departmentId}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/rooms",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"rooms"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Get data",
							"item": [
								{
									"name": "Get department",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/departments/{{departmentId}}",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"departments",
												"{{departmentId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get room",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/rooms/{{roomId}}",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"rooms",
												"{{roomId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Update data",
							"item": [
								{
									"name": "Update department",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json(); // ответный джсон сохраним в переменную \r",
													"\r",
													"if(pm.response.code === 200){\r",
													"    pm.collectionVariables.set(\"departmentId\", jsonData.result.id)\r",
													"    pm.collectionVariables.set(\"departmentName\", jsonData.result.name)\r",
													"}\r",
													"\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"{{$randomJobType}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/departments/{{departmentId}}",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"departments",
												"{{departmentId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update room",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json(); // ответный джсон сохраним в переменную \r",
													"\r",
													"if(pm.response.code === 200){\r",
													"    pm.collectionVariables.set(\"roomId\", jsonData.result.id)\r",
													"}\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"distanceInRoom\", _.random(1, 15))\r",
													"pm.collectionVariables.set(\"roomVolume\", _.random(1, 15))"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"{{$randomJobArea}}\",\r\n  \"distance\": {{distanceInRoom}},\r\n  \"volume\": {{roomVolume}},\r\n  \"department\": {{departmentId}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/rooms/{{roomId}}",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"rooms",
												"{{roomId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Search and copy",
							"item": [
								{
									"name": "Search departments",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var typeArray = [\"ID\", \"CREATED_DATE_TIME\", \"NAME\", \"ROOMS_COUNT\"]\r",
													"var sortingTypeForDepartment = typeArray[_.random(0, typeArray.length - 1)]\r",
													"pm.collectionVariables.set(\"sortingTypeForDepartment\", sortingTypeForDepartment)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"offset\": 0,\r\n  \"limit\": 100,\r\n  \"searchText\": \"{{departmentName}}\",\r\n  \"sorting\": [\r\n    {\r\n      \"type\": \"{{sortingTypeForDepartment}}\",\r\n      \"order\": \"{{order}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/departments/search",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"departments",
												"search"
											]
										}
									},
									"response": []
								},
								{
									"name": "Copy department",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json(); // ответный джсон сохраним в переменную \r",
													"\r",
													"if(pm.response.code === 201){\r",
													"    pm.collectionVariables.set(\"departmentCopyId\", jsonData.result.id)\r",
													"}\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"department\": {{departmentId}},\r\n  \"name\": \"{{$randomJobArea}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/departments/copy",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"departments",
												"copy"
											]
										}
									},
									"response": []
								},
								{
									"name": "Copy room",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json(); // ответный джсон сохраним в переменную \r",
													"\r",
													"if(pm.response.code === 201){\r",
													"    pm.collectionVariables.set(\"roomCopyId\", jsonData.result.id)\r",
													"}\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"room\": {{roomId}},\r\n  \"name\": \"{{$randomJobArea}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/rooms/copy",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"rooms",
												"copy"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search rooms for device processing",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/rooms/search/department/{{departmentId}}",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"rooms",
												"search",
												"department",
												"{{departmentId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Search departments for device processing (СОЗДАТЬ И ПЕРЕДАТЬ УСТАНОВКУ КЛИЕНТУ)",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.melitta.technaxis.com/api/v1/admin/departments/search/device/{{deviceId}}",
											"protocol": "https",
											"host": [
												"api",
												"melitta",
												"technaxis",
												"com"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"departments",
												"search",
												"device",
												"{{deviceId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "search countries",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json(); // ответный джсон сохраним в переменную",
							"",
							"console.log('jsonData: ', jsonData);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"if(pm.response.code === 200){",
							"    if(jsonData.result.data !== 0) console.log('список стран не пустой');",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"offset\": 0,\n  \"limit\": 10\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.melitta.technaxis.com/api/v1/admin/countries/search",
					"protocol": "https",
					"host": [
						"api",
						"melitta",
						"technaxis",
						"com"
					],
					"path": [
						"api",
						"v1",
						"admin",
						"countries",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "get city",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 202\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.melitta.technaxis.com/api/v1/admin/cities/{{cityId}}",
					"protocol": "https",
					"host": [
						"api",
						"melitta",
						"technaxis",
						"com"
					],
					"path": [
						"api",
						"v1",
						"admin",
						"cities",
						"{{cityId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put city",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 202\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"country\": {{сontryId}},\n  \"name\": \"измененное название города через Postman\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.melitta.technaxis.com/api/v1/admin/cities/{{cityId}}",
					"protocol": "https",
					"host": [
						"api",
						"melitta",
						"technaxis",
						"com"
					],
					"path": [
						"api",
						"v1",
						"admin",
						"cities",
						"{{cityId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "create distributor",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json(); // ответны джсон",
							"",
							"",
							"if(pm.response.code === 201){",
							"    pm.collectionVariables.set('distributor', jsonData.result.id); //  из ответного джсона возьмет поле id  и сохранит в переменную ",
							"    // pm.environment.set(\"distributor\", jsonData.result.id); //  тогда перменная преейдет в блок Environment variable",
							"    console.log('distributor =',  distributor);",
							"}",
							"",
							"",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randIndex = _.random(1, 100);",
							"pm.collectionVariables.set('randIndex', randIndex); //сгенеренное число сохраняем в переменную randIndex",
							"",
							"var phone = \"+7\";",
							"for(let i=0; i<10; i++){",
							"    phone += _.random(0, 9);  // генерим номер телефона",
							"}",
							"",
							"pm.collectionVariables.set('phone', phone); // сохраняем номер тел в перменную phone",
							"console.log('phone =', phone);",
							"",
							"",
							"var warrantyMonths = _.random(1, 10);",
							"pm.collectionVariables.set('warrantyMonths', warrantyMonths);",
							"console.log('warrantyMonths =', warrantyMonths);",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "tokenType",
							"value": "",
							"type": "string"
						},
						{
							"key": "accessToken",
							"value": "{{access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"{{$randomUserName}}\",\n  \"city\": {{cityId}}, \n  \"address\": \"{{$randomStreetAddress}}\", \n  \"phone\": \"{{phone}}\",\n  \"email\": \"{{$randomEmail}}\",\n  \"notes\": \"{{$randomLoremWords}}\",\n  \"warrantyMonths\": {{warrantyMonths}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.melitta.technaxis.com/api/v1/admin/distributors",
					"protocol": "https",
					"host": [
						"api",
						"melitta",
						"technaxis",
						"com"
					],
					"path": [
						"api",
						"v1",
						"admin",
						"distributors"
					]
				}
			},
			"response": []
		},
		{
			"name": "create client",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"{{$randomUserName}}\",\n  \"city\": {{cityId}},\n  \"address\": \"{{$randomStreetAddress}}\",\n  \"phone\": \"{{phone}}\",\n  \"email\": \"{{$randomEmail}}\",\n  \"notes\": \"{{$randomLoremWords}}\",\n  \"distributor\": {{distributorId}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.melitta.technaxis.com/api/v1/admin/clients",
					"protocol": "https",
					"host": [
						"api",
						"melitta",
						"technaxis",
						"com"
					],
					"path": [
						"api",
						"v1",
						"admin",
						"clients"
					]
				}
			},
			"response": []
		},
		{
			"name": "create update device",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// var jsonData = pm.response.json(); // ответны джсон",
							"",
							"// //JSON.parse(responseBody); ",
							"",
							"// //console.log('responseBody = ', responseBody);",
							"// console.log('jsonData.result.id ', jsonData.result.id); // из ответного джсона возьмет поле id",
							"",
							"// if(pm.response.code === 201){",
							"//     pm.collectionVariables.set('idUpdateDevice', jsonData.result.id); //  из ответного джсона возьмет поле id  и сохранит в переменную idUpdateDevice",
							"",
							"// }",
							"",
							"// pm.test(\"Status code is 201\", function () {",
							"//     pm.response.to.have.status(201);",
							"// });",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var paramDeviceUpdateVersion = _.random(1, 17);",
							"console.log('paramDeviceUpdateVersion = ', paramDeviceUpdateVersion);",
							"",
							"pm.collectionVariables.set('paramDeviceUpdateVersion', paramDeviceUpdateVersion); ",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "tokenType",
							"value": "",
							"type": "string"
						},
						{
							"key": "accessToken",
							"value": "{{access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"type\": \"DEVICE\",\n  \"name\": \"тестовое обновление DEVICE\",\n  \"params\": [\n    {\n      \"paramType\": \"DEVICE_UPDATE_VERSION\",\n      \"paramDeviceUpdateVersion\": {{paramDeviceUpdateVersion}},\n      \"paramSerialNumber\": \"908978\"\n    }\n  ],\n  \"description\": \"{{$randomLoremWords}}\",\n  \"fileItem\": 1,\n  \"deliveryType\": \"PDU_TO_DEVICE\",\n  \"notification\": true,\n  \"notifyDateTime\": 1623272400000\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.melitta.technaxis.com/api/v1/admin/updates",
					"protocol": "https",
					"host": [
						"api",
						"melitta",
						"technaxis",
						"com"
					],
					"path": [
						"api",
						"v1",
						"admin",
						"updates"
					]
				}
			},
			"response": []
		},
		{
			"name": "create update pdu",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json(); // ответны джсон лмбо так JSON.parse(responseBody);",
							"",
							"",
							"",
							"//console.log('responseBody = ', responseBody);",
							"console.log('jsonData.result.id ', jsonData.result.id); // из ответного джсона возьмет поле id",
							"",
							"if(pm.response.code === 201){",
							"    pm.collectionVariables.set('idUpdatePdu', jsonData.result.id); //  из ответного джсона возьмет поле id  и сохранит в переменную idUpdatePDU  ",
							"}",
							"",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var paramPduUpdateVersion = _.random(1, 17);",
							"console.log('paramPduUpdateVersion =', paramPduUpdateVersion);",
							"",
							"pm.collectionVariables.set('paramPduUpdateVersion', paramPduUpdateVersion); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "tokenType",
							"value": "",
							"type": "string"
						},
						{
							"key": "accessToken",
							"value": "{{access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"type\": \"PDU\",\n  \"name\": \"обновление PDU\",\n  \"params\": [\n    {\n      \"paramType\": \"PDU_UPDATE_VERSION\",\n      \"paramPduUpdateVersion\": {{paramPduUpdateVersion}}\n    }\n  ],\n  \"description\": \"{{$randomLoremWords}}\",\n  \"fileItem\": 1,\n  \"deliveryType\": \"LOCAL\",\n  \"notification\": true,\n  \"notifyDateTime\": 1624136400000\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.melitta.technaxis.com/api/v1/admin/updates",
					"protocol": "https",
					"host": [
						"api",
						"melitta",
						"technaxis",
						"com"
					],
					"path": [
						"api",
						"v1",
						"admin",
						"updates"
					]
				}
			},
			"response": []
		},
		{
			"name": "passed device",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "tokenType",
							"value": "",
							"type": "string"
						},
						{
							"key": "accessToken",
							"value": "{{access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"distributor\": {{distributor}},\n  \"password\": \"adminadmin\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/pass/{{deviceId}}",
					"protocol": "https",
					"host": [
						"api",
						"melitta",
						"technaxis",
						"com"
					],
					"path": [
						"api",
						"v1",
						"admin",
						"devices",
						"pass",
						"{{deviceId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getDeviceById",
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "tokenType",
							"value": "",
							"type": "string"
						},
						{
							"key": "accessToken",
							"value": "{{access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.melitta.technaxis.com/api/v1/admin/devices/{{deviceId}}",
					"protocol": "https",
					"host": [
						"api",
						"melitta",
						"technaxis",
						"com"
					],
					"path": [
						"api",
						"v1",
						"admin",
						"devices",
						"{{deviceId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "access_token",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		},
		{
			"key": "modelDevice",
			"value": ""
		},
		{
			"key": "city",
			"value": ""
		},
		{
			"key": "state",
			"value": ""
		},
		{
			"key": "lampPhotoSensor",
			"value": ""
		},
		{
			"key": "serialNumber",
			"value": ""
		},
		{
			"key": "technicalNumber",
			"value": ""
		},
		{
			"key": "lampOperatingTime",
			"value": ""
		},
		{
			"key": "lampNumber",
			"value": ""
		},
		{
			"key": "technicalOperatingTime",
			"value": ""
		},
		{
			"key": "deviceId",
			"value": ""
		},
		{
			"key": "paramDeviceUpdateVersion",
			"value": ""
		},
		{
			"key": "paramPduUpdateVersion",
			"value": ""
		},
		{
			"key": "randIndex",
			"value": ""
		},
		{
			"key": "phone",
			"value": ""
		},
		{
			"key": "warrantyMonths",
			"value": ""
		},
		{
			"key": "сontryId",
			"value": ""
		},
		{
			"key": "cityId",
			"value": ""
		},
		{
			"key": "testCountryId",
			"value": ""
		},
		{
			"key": "testCityId",
			"value": ""
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "picture",
			"value": ""
		},
		{
			"key": "deviceUpdateVersion",
			"value": ""
		},
		{
			"key": "pduUpdateVersion",
			"value": ""
		},
		{
			"key": "testDistributorsId",
			"value": ""
		},
		{
			"key": "userName",
			"value": ""
		},
		{
			"key": "testDistributorName",
			"value": ""
		},
		{
			"key": "typeSorting",
			"value": ""
		},
		{
			"key": "order",
			"value": ""
		},
		{
			"key": "cityNameToSearchDistributors",
			"value": ""
		},
		{
			"key": "distributorId",
			"value": ""
		},
		{
			"key": "testClientId",
			"value": ""
		},
		{
			"key": "testClientName",
			"value": ""
		},
		{
			"key": "clientType",
			"value": ""
		},
		{
			"key": "countryCode",
			"value": ""
		},
		{
			"key": "cityName",
			"value": ""
		},
		{
			"key": "nameTestDevice",
			"value": ""
		},
		{
			"key": "modelDevice ",
			"value": ""
		},
		{
			"key": "technicalOperatingTime ",
			"value": ""
		},
		{
			"key": "lampOperatingTime ",
			"value": ""
		},
		{
			"key": "lampPhotoSensor ",
			"value": ""
		},
		{
			"key": "deviceUpdateVersionForTestDevice",
			"value": ""
		},
		{
			"key": "pduUpdateVersionForTestDevice",
			"value": ""
		},
		{
			"key": "receiveDateTime",
			"value": ""
		},
		{
			"key": "dispatchDateTime",
			"value": ""
		},
		{
			"key": "receiveDateTimeR",
			"value": ""
		},
		{
			"key": "dispatchDateTimeR",
			"value": ""
		},
		{
			"key": "testDeviceId",
			"value": ""
		},
		{
			"key": "accessCode",
			"value": ""
		},
		{
			"key": "clientId",
			"value": ""
		},
		{
			"key": "clientName",
			"value": ""
		},
		{
			"key": "producersClientId",
			"value": ""
		},
		{
			"key": "producersClientName",
			"value": ""
		},
		{
			"key": "distributorName",
			"value": ""
		},
		{
			"key": "sortTypeForDeviceSearch",
			"value": ""
		},
		{
			"key": "userRole",
			"value": ""
		},
		{
			"key": "distibutorUserId",
			"value": ""
		},
		{
			"key": "userRoleForSearch",
			"value": ""
		},
		{
			"key": "producerUserId",
			"value": ""
		},
		{
			"key": "clientUserId",
			"value": ""
		},
		{
			"key": "clientUserName",
			"value": ""
		},
		{
			"key": "deviceUpdateVersionForDistributor",
			"value": ""
		},
		{
			"key": "pduUpdateVersionForDistributor",
			"value": ""
		},
		{
			"key": "typeUpdate",
			"value": ""
		},
		{
			"key": "updateParamType",
			"value": ""
		},
		{
			"key": "fileItem",
			"value": ""
		},
		{
			"key": "updateDdeliveryType",
			"value": ""
		},
		{
			"key": "updateStatus",
			"value": ""
		},
		{
			"key": "notificationSendDateTime",
			"value": ""
		},
		{
			"key": "updateId",
			"value": ""
		},
		{
			"key": "moduleToLoadFile",
			"value": ""
		},
		{
			"key": "previewCompressionMode",
			"value": ""
		},
		{
			"key": "dateTimeTask",
			"value": ""
		},
		{
			"key": "clientForTaskId",
			"value": ""
		},
		{
			"key": "clientUserForTaskId",
			"value": ""
		},
		{
			"key": "deviceForTaskId",
			"value": ""
		},
		{
			"key": "userTypeForNotification",
			"value": ""
		},
		{
			"key": "sendDateTimeForNotification",
			"value": ""
		},
		{
			"key": "notificationId",
			"value": ""
		},
		{
			"key": "titleNotification",
			"value": ""
		},
		{
			"key": "bodyNotification",
			"value": ""
		},
		{
			"key": "uuid",
			"value": ""
		},
		{
			"key": "departmentId",
			"value": ""
		},
		{
			"key": "distanceInRoom",
			"value": ""
		},
		{
			"key": "roomVolume",
			"value": ""
		},
		{
			"key": "roomId",
			"value": ""
		},
		{
			"key": "departmentName",
			"value": ""
		},
		{
			"key": "sortingTypeForDepartment",
			"value": ""
		},
		{
			"key": "departmentCopyId",
			"value": ""
		},
		{
			"key": "roomCopyId",
			"value": ""
		},
		{
			"key": "uuid_for_PROFILE",
			"value": ""
		},
		{
			"key": "picture_for_PROFILE",
			"value": ""
		},
		{
			"key": "uuid_for_UPDATE",
			"value": ""
		},
		{
			"key": "picture_for_UPDATE",
			"value": ""
		},
		{
			"key": "testDevicForArchivingId",
			"value": ""
		},
		{
			"key": "distibutorUserName",
			"value": ""
		},
		{
			"key": "producerUserName",
			"value": ""
		}
	]
}